{"Typealiases.html#/s:7SwiftZ30B3Inta":{"name":"Z3Int","abstract":"<p>An integer AST type."},"Typealiases.html#/s:7SwiftZ30B4Reala":{"name":"Z3Real","abstract":"<p>A real number AST type."},"Typealiases.html#/s:7SwiftZ303AnyB9BitVectora":{"name":"AnyZ3BitVector","abstract":"<p>Type alias for a generic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast</a></code> bit-vector instance that features an underlying"},"Typealiases.html#/s:7SwiftZ30B9BitVectora":{"name":"Z3BitVector","abstract":"<p>A specialized BitVector AST type.</p>"},"Typealiases.html#/s:7SwiftZ30B10BitVector1a":{"name":"Z3BitVector1","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BitVectorSort1.html\">BitVectorSort1</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B12BitVector128a":{"name":"Z3BitVector128","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BitVectorSort128.html\">BitVectorSort128</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B11BitVector32a":{"name":"Z3BitVector32","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ315BitVectorSort32a\">BitVectorSort32</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B11BitVector64a":{"name":"Z3BitVector64","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ315BitVectorSort64a\">BitVectorSort64</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B12BitVectorU32a":{"name":"Z3BitVectorU32","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ323BitVectorSortUnsigned32a\">BitVectorSortUnsigned32</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B12BitVectorU64a":{"name":"Z3BitVectorU64","abstract":"<p>A typealias for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ30B9BitVectora\">Z3BitVector</a></code> with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:7SwiftZ323BitVectorSortUnsigned64a\">BitVectorSortUnsigned64</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ303AnyB13FloatingPointa":{"name":"AnyZ3FloatingPoint","abstract":"<p>Type alias for a generic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast</a></code> floating-point instance that features an"},"Typealiases.html#/s:7SwiftZ30B6Doublea":{"name":"Z3Double","abstract":"<p>A 64-bit precision floating-point AST type.</p>"},"Typealiases.html#/s:7SwiftZ30B5Floata":{"name":"Z3Float","abstract":"<p>A 32-bit precision floating-point AST type.</p>"},"Typealiases.html#/s:7SwiftZ30B13FloatingPointa":{"name":"Z3FloatingPoint","abstract":"<p>A typealias for general Floating Point-sort ASTs</p>"},"Typealiases.html#/s:7SwiftZ30B12RoundingModea":{"name":"Z3RoundingMode","abstract":"<p>A typealias for a Z3Ast with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RoundingModeSort.html\">RoundingModeSort</a></code> sort.</p>"},"Typealiases.html#/s:7SwiftZ30B5Arraya":{"name":"Z3Array","abstract":"<p>An Array AST type</p>"},"Typealiases.html#/s:7SwiftZ30B4Boola":{"name":"Z3Bool","abstract":"<p>A Boolean AST type.</p>"},"Typealiases.html#/s:7SwiftZ30B4Chara":{"name":"Z3Char","abstract":"<p>A unicode character AST.</p>"},"Typealiases.html#/s:7SwiftZ30B3Seta":{"name":"Z3Set","abstract":"<p>A Set AST type. Equivalent to an array of domain T and range Bool.</p>"},"Typealiases.html#/s:7SwiftZ30B6Stringa":{"name":"Z3String","abstract":"<p>A String type AST. Equivalent to the sort of a sequence of char.</p>"},"Typealiases.html#/s:7SwiftZ30B7AstKinda":{"name":"Z3AstKind","abstract":"<p>The different kinds of Z3 AST (abstract syntax trees). That is, terms, formulas and types.</p>"},"Typealiases.html#/s:7SwiftZ30B12AstPrintModea":{"name":"Z3AstPrintMode","abstract":"<p>Z3 pretty printing modes (See #Z3_set_ast_print_mode).</p>"},"Typealiases.html#/s:7SwiftZ30B8DeclKinda":{"name":"Z3DeclKind","abstract":"<p>The different kinds of interpreted function kinds.</p>"},"Typealiases.html#/s:7SwiftZ30B9ErrorCodea":{"name":"Z3ErrorCode","abstract":"<p>Z3 error codes (See #Z3_get_error_code).</p>"},"Typealiases.html#/s:7SwiftZ30B8GoalPreca":{"name":"Z3GoalPrec","abstract":"<p>A Goal is essentially a set of formulas."},"Typealiases.html#/s:7SwiftZ30B5LBoola":{"name":"Z3LBool","abstract":"<p>Lifted Boolean type: <code>false</code>, <code>undefined</code>, <code>true</code>.</p>"},"Typealiases.html#/s:7SwiftZ30B9ParamKinda":{"name":"Z3ParamKind","abstract":"<p>The different kinds of parameters that can be associated with parameter sets."},"Typealiases.html#/s:7SwiftZ30B13ParameterKinda":{"name":"Z3ParameterKind","abstract":"<p>The different kinds of parameters that can be associated with function symbols."},"Typealiases.html#/s:7SwiftZ30B8SortKinda":{"name":"Z3SortKind","abstract":"<p>The different kinds of Z3 types (See #Z3_get_sort_kind).</p>"},"Typealiases.html#/s:7SwiftZ30B10SymbolKinda":{"name":"Z3SymbolKind","abstract":"<p>The different kinds of symbol."},"Typealiases.html#/s:7SwiftZ314BitVectorSort8a":{"name":"BitVectorSort8","abstract":"<p>A bit vector of length 8</p>"},"Typealiases.html#/s:7SwiftZ315BitVectorSort16a":{"name":"BitVectorSort16","abstract":"<p>A bit vector of length 16</p>"},"Typealiases.html#/s:7SwiftZ315BitVectorSort32a":{"name":"BitVectorSort32","abstract":"<p>A bit vector of length 32</p>"},"Typealiases.html#/s:7SwiftZ315BitVectorSort64a":{"name":"BitVectorSort64","abstract":"<p>A bit vector of length 64</p>"},"Typealiases.html#/s:7SwiftZ322BitVectorSortUnsigned8a":{"name":"BitVectorSortUnsigned8","abstract":"<p>A bit vector of length 8, unsigned.</p>"},"Typealiases.html#/s:7SwiftZ323BitVectorSortUnsigned16a":{"name":"BitVectorSortUnsigned16","abstract":"<p>A bit vector of length 16, unsigned.</p>"},"Typealiases.html#/s:7SwiftZ323BitVectorSortUnsigned32a":{"name":"BitVectorSortUnsigned32","abstract":"<p>A bit vector of length 32, unsigned.</p>"},"Typealiases.html#/s:7SwiftZ323BitVectorSortUnsigned64a":{"name":"BitVectorSortUnsigned64","abstract":"<p>A bit vector of length 64, unsigned.</p>"},"Typealiases.html#/s:7SwiftZ37SetSorta":{"name":"SetSort","abstract":"<p>Represents a Set sort, specializing an Array sort with a range of Bool sort.</p>"},"Typealiases.html#/s:7SwiftZ30B7CStringa":{"name":"Z3CString","abstract":"<p>Undocumented</p>"},"Structs/SeqSort.html#/s:7SwiftZ37SeqSortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Creates a concrete instance of a Z3 sort that represents this sort kind.</p>","parent_name":"SeqSort"},"Structs/ReSort.html#/s:7SwiftZ36ReSortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Creates a concrete instance of a Z3 sort that represents this sort kind.</p>","parent_name":"ReSort"},"Structs/RoundingModeSort.html#/s:7SwiftZ316RoundingModeSortV03getE0yAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a floating-point Rounding Mode sort.</p>","parent_name":"RoundingModeSort"},"Structs/FP16Sort.html#/s:7SwiftZ38FP16SortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a 16-bit FloatingPoint sort.</p>","parent_name":"FP16Sort"},"Structs/FP128Sort.html#/s:7SwiftZ39FP128SortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a 128-bit FloatingPoint sort.</p>","parent_name":"FP128Sort"},"Structs/AnyFPSort.html#/s:7SwiftZ38SortKindP10isConcreteSbvpZ":{"name":"isConcrete","parent_name":"AnyFPSort"},"Structs/AnyFPSort.html#/s:7SwiftZ39AnyFPSortV7getSortyAA0bF0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Note: Fatal-errors</p>","parent_name":"AnyFPSort"},"Structs/AnyFPSort.html#/s:7SwiftZ39AnyFPSortV16isAssignableFromySbAA0B7ContextC_AA0B4SortCtFZ":{"name":"isAssignableFrom(_:_:)","abstract":"<p>Returns <code>true</code> if <code>sort</code> represents a floating-point sort of any bit length.</p>","parent_name":"AnyFPSort"},"Structs/BitVectorSort128.html#/s:7SwiftZ313BitVectorSortP8bitWidths6UInt32VvpZ":{"name":"bitWidth","parent_name":"BitVectorSort128"},"Structs/BitVectorSort1.html#/s:7SwiftZ313BitVectorSortP8bitWidths6UInt32VvpZ":{"name":"bitWidth","parent_name":"BitVectorSort1"},"Structs/BitVectorOfInt.html#/s:7SwiftZ313BitVectorSortP8bitWidths6UInt32VvpZ":{"name":"bitWidth","parent_name":"BitVectorOfInt"},"Structs/AnyBitVectorSort.html#/s:7SwiftZ38SortKindP10isConcreteSbvpZ":{"name":"isConcrete","parent_name":"AnyBitVectorSort"},"Structs/AnyBitVectorSort.html#/s:7SwiftZ316AnyBitVectorSortV03getF0yAA0bF0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Note: Fatal-errors</p>","parent_name":"AnyBitVectorSort"},"Structs/AnyBitVectorSort.html#/s:7SwiftZ316AnyBitVectorSortV16isAssignableFromySbAA0B7ContextC_AA0bF0CtFZ":{"name":"isAssignableFrom(_:_:)","abstract":"<p>Returns <code>true</code> if <code>sort</code> represents a bit vector sort of any bit length.</p>","parent_name":"AnyBitVectorSort"},"Structs/RealSort.html#/s:7SwiftZ38RealSortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a Real sort.","parent_name":"RealSort"},"Structs/IntSort.html#/s:7SwiftZ37IntSortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns an integer sort.","parent_name":"IntSort"},"Structs/CharSort.html#/s:7SwiftZ38CharSortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns the unicode character sort.</p>","parent_name":"CharSort"},"Structs/ArraySort.html#/s:7SwiftZ39ArraySortV03getD0yAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns the Array sort with the current type&rsquo;s Domain and Range.</p>","parent_name":"ArraySort"},"Structs/ArraySort.html":{"name":"ArraySort","abstract":"<p>A sort that describes an array with a domain and range, specified by two"},"Structs/CharSort.html":{"name":"CharSort","abstract":"<p>A unicode character sort.</p>"},"Structs/IntSort.html":{"name":"IntSort","abstract":"<p>An integer sort."},"Structs/RealSort.html":{"name":"RealSort","abstract":"<p>A real number sort."},"Structs/AnyBitVectorSort.html":{"name":"AnyBitVectorSort","abstract":"<p>A BitVector sort to type-erase <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast&lt;T&gt;</a></code> instances to."},"Structs/BitVectorOfInt.html":{"name":"BitVectorOfInt","abstract":"<p>A bit width sort which fits as many bits as the bit width of its <code>T</code> parameter</p>"},"Structs/BitVectorSort1.html":{"name":"BitVectorSort1","abstract":"<p>A bit vector of length 1</p>"},"Structs/BitVectorSort128.html":{"name":"BitVectorSort128","abstract":"<p>A bit vector of length 128</p>"},"Structs/AnyFPSort.html":{"name":"AnyFPSort","abstract":"<p>A FP sort to type-erase <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast&lt;T&gt;</a></code> instances to."},"Structs/FP128Sort.html":{"name":"FP128Sort","abstract":"<p>A Quadruple-precision floating point sort</p>"},"Structs/FP16Sort.html":{"name":"FP16Sort","abstract":"<p>A half precision floating point sort</p>"},"Structs/RoundingModeSort.html":{"name":"RoundingModeSort","abstract":"<p>A <code>RoundingMode</code> sort for values that specify the rounding mode of floating"},"Structs/ReSort.html":{"name":"ReSort","abstract":"<p>A meta-sort that is used to represent regular expression sorts."},"Structs/SeqSort.html":{"name":"SeqSort","abstract":"<p>A meta-sort that is used to represent sequence sorts."},"Protocols/FloatingSort.html#/s:7SwiftZ312FloatingSortP8getEbitsys6UInt32VAA0B7ContextCFZ":{"name":"getEbits(_:)","abstract":"<p>Retrieves the number of bits reserved for the exponent in this","parent_name":"FloatingSort"},"Protocols/FloatingSort.html#/s:7SwiftZ312FloatingSortP8getSbitsys6UInt32VAA0B7ContextCFZ":{"name":"getSbits(_:)","abstract":"<p>Retrieves the number of bits reserved for the significand in this","parent_name":"FloatingSort"},"Protocols/BitVectorSort.html#/s:7SwiftZ313BitVectorSortP8bitWidths6UInt32VvpZ":{"name":"bitWidth","abstract":"<p>Bit-width of vector sort</p>","parent_name":"BitVectorSort"},"Protocols/BitVectorSort.html#/s:7SwiftZ313BitVectorSortPAAE03getE0yAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a bit vector sort with the number of bits described by <code>Self.bitWidth</code>.</p>","parent_name":"BitVectorSort"},"Protocols/SortKind.html#/s:7SwiftZ38SortKindP10isConcreteSbvpZ":{"name":"isConcrete","abstract":"<p>Whether this is a concrete Sort kind, that is, it can be used to generate","parent_name":"SortKind"},"Protocols/SortKind.html#/s:7SwiftZ38SortKindP03getC0yAA0bC0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Creates a concrete instance of a Z3 sort that represents this sort kind.</p>","parent_name":"SortKind"},"Protocols/SortKind.html#/s:7SwiftZ38SortKindP16isAssignableFromySbAA0B7ContextC_AA0bC0CtFZ":{"name":"isAssignableFrom(_:_:)","abstract":"<p>Returns whether this sort kind can be used to represent a more specialized","parent_name":"SortKind"},"Protocols/SortKind.html":{"name":"SortKind","abstract":"<p>Protocol for types that represent Z3 sorts.</p>"},"Protocols.html#/s:7SwiftZ314ArithmeticSortP":{"name":"ArithmeticSort","abstract":"<p>Protocol for integer or real numerical sorts.</p>"},"Protocols/BitVectorSort.html":{"name":"BitVectorSort","abstract":"<p>Protocol for bit vectors numerical sorts.</p>"},"Protocols/FloatingSort.html":{"name":"FloatingSort","abstract":"<p>Protocol for floating-point numerical sorts.</p>"},"Protocols.html#/s:7SwiftZ313NumericalSortP":{"name":"NumericalSort","abstract":"<p>Base protocol for all other numerical sort types.</p>"},"Functions.html#/s:7SwiftZ33absyAA0B3AstCyxGAeA12FloatingSortRzlF":{"name":"abs(_:)","abstract":"<p>Creates a floating-point absolute value AST for a given floating point.</p>"},"Functions.html#/s:7SwiftZ33minyAA0B3AstCyxGAE_AEtAA12FloatingSortRzlF":{"name":"min(_:_:)","abstract":"<p>Creates an AST for the minimum of two floating-point numbers.</p>"},"Functions.html#/s:7SwiftZ33maxyAA0B3AstCyxGAE_AEtAA12FloatingSortRzlF":{"name":"max(_:_:)","abstract":"<p>Creates an AST for the maximum of two floating-point numbers.</p>"},"Extensions/Float80.html#/s:s7Float80V7SwiftZ3E7getSortyAC0cE0CAC0C7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns an 80-bit FloatingPoint sort.</p>","parent_name":"Float80"},"Extensions/Float.html#/s:Sf7SwiftZ3E7getSortyAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a 32-bit FloatingPoint sort.</p>","parent_name":"Float"},"Extensions/Double.html#/s:Sd7SwiftZ3E7getSortyAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a 64-bit FloatingPoint sort.</p>","parent_name":"Double"},"Extensions/Bool.html#/s:Sb7SwiftZ3E7getSortyAA0bD0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Returns a Bool sort.</p>","parent_name":"Bool"},"Extensions/Z3SymbolKind.html#/s:So14Z3_symbol_kinda05SwiftA0E9intSymbolABvpZ":{"name":"intSymbol","abstract":"<p>Undocumented</p>","parent_name":"Z3SymbolKind"},"Extensions/Z3SymbolKind.html#/s:So14Z3_symbol_kinda05SwiftA0E12stringSymbolABvpZ":{"name":"stringSymbol","abstract":"<p>Undocumented</p>","parent_name":"Z3SymbolKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E17uninterpretedSortABvpZ":{"name":"uninterpretedSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E8boolSortABvpZ":{"name":"boolSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E7intSortABvpZ":{"name":"intSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E8realSortABvpZ":{"name":"realSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E6bvSortABvpZ":{"name":"bvSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E9arraySortABvpZ":{"name":"arraySort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E12datatypeSortABvpZ":{"name":"datatypeSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E12relationSortABvpZ":{"name":"relationSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E16finiteDomainSortABvpZ":{"name":"finiteDomainSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E17floatingPointSortABvpZ":{"name":"floatingPointSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E16roundingModeSortABvpZ":{"name":"roundingModeSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E7seqSortABvpZ":{"name":"seqSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E6reSortABvpZ":{"name":"reSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E8charSortABvpZ":{"name":"charSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3SortKind.html#/s:So12Z3_sort_kinda05SwiftA0E11unknownSortABvpZ":{"name":"unknownSort","abstract":"<p>Undocumented</p>","parent_name":"Z3SortKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E3intABvpZ":{"name":"int","abstract":"<p>is used for integer parameters.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E6doubleABvpZ":{"name":"double","abstract":"<p>is used for double parameters.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E8rationalABvpZ":{"name":"rational","abstract":"<p>is used for parameters that are rational numbers.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E6symbolABvpZ":{"name":"symbol","abstract":"<p>is used for parameters that are symbols.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E4sortABvpZ":{"name":"sort","abstract":"<p>is used for sort parameters.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E3astABvpZ":{"name":"ast","abstract":"<p>is used for expression parameters.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParameterKind.html#/s:So17Z3_parameter_kinda05SwiftA0E8funcDeclABvpZ":{"name":"funcDecl","abstract":"<p>is used for function declaration parameters.</p>","parent_name":"Z3ParameterKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E6pkUIntABvpZ":{"name":"pkUInt","abstract":"<p>integer parameters.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E6pkBoolABvpZ":{"name":"pkBool","abstract":"<p>boolean parameters.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E8pkDoubleABvpZ":{"name":"pkDouble","abstract":"<p>double parameters.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E8pkSymbolABvpZ":{"name":"pkSymbol","abstract":"<p>symbol parameters.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E8pkStringABvpZ":{"name":"pkString","abstract":"<p>string parameters.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E7pkOtherABvpZ":{"name":"pkOther","abstract":"<p>all internal parameter kinds which are not exposed in the API.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3ParamKind.html#/s:So13Z3_param_kinda05SwiftA0E9pkInvalidABvpZ":{"name":"pkInvalid","abstract":"<p>invalid parameter.</p>","parent_name":"Z3ParamKind"},"Extensions/Z3LBool.html#/s:So8Z3_lboola05SwiftA0E6lFalseABvpZ":{"name":"lFalse","abstract":"<p>Undocumented</p>","parent_name":"Z3LBool"},"Extensions/Z3LBool.html#/s:So8Z3_lboola05SwiftA0E6lUndefABvpZ":{"name":"lUndef","abstract":"<p>Undocumented</p>","parent_name":"Z3LBool"},"Extensions/Z3LBool.html#/s:So8Z3_lboola05SwiftA0E5lTrueABvpZ":{"name":"lTrue","abstract":"<p>Undocumented</p>","parent_name":"Z3LBool"},"Extensions/Z3GoalPrec.html#/s:So12Z3_goal_preca05SwiftA0E7preciseABvpZ":{"name":"precise","abstract":"<p>Approximations/Relaxations were not applied on the goal (sat and unsat answers were preserved).</p>","parent_name":"Z3GoalPrec"},"Extensions/Z3GoalPrec.html#/s:So12Z3_goal_preca05SwiftA0E5underABvpZ":{"name":"under","abstract":"<p>Goal is the product of a under-approximation (sat answers are preserved).</p>","parent_name":"Z3GoalPrec"},"Extensions/Z3GoalPrec.html#/s:So12Z3_goal_preca05SwiftA0E4overABvpZ":{"name":"over","abstract":"<p>Goal is the product of an over-approximation (unsat answers are preserved).</p>","parent_name":"Z3GoalPrec"},"Extensions/Z3GoalPrec.html#/s:So12Z3_goal_preca05SwiftA0E9underOverABvpZ":{"name":"underOver","abstract":"<p>Goal is garbage (it is the product of over- and under-approximations, sat and unsat answers are not preserved).</p>","parent_name":"Z3GoalPrec"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E2okABvpZ":{"name":"ok","abstract":"<p>No error.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E9sortErrorABvpZ":{"name":"sortError","abstract":"<p>User tried to build an invalid (type incorrect) AST.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E3iobABvpZ":{"name":"iob","abstract":"<p>Index out of bounds.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E10invalidArgABvpZ":{"name":"invalidArg","abstract":"<p>Invalid argument was provided.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E11parserErrorABvpZ":{"name":"parserError","abstract":"<p>An error occurred when parsing a string or file.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E8noParserABvpZ":{"name":"noParser","abstract":"<p>Parser output is not available, that is, user didn&rsquo;t invoke #Z3_parse_smtlib2_string or #Z3_parse_smtlib2_file.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E14invalidPatternABvpZ":{"name":"invalidPattern","abstract":"<p>Invalid pattern was used to build a quantifier.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E10memoutFailABvpZ":{"name":"memoutFail","abstract":"<p>A memory allocation failure was encountered.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E15fileAccessErrorABvpZ":{"name":"fileAccessError","abstract":"<p>Undocumented</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E13internalFatalABvpZ":{"name":"internalFatal","abstract":"<p>An error internal to Z3 occurred.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E12invalidUsageABvpZ":{"name":"invalidUsage","abstract":"<p>API call is invalid in the current state.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E11decRefErrorABvpZ":{"name":"decRefError","abstract":"<p>Trying to decrement the reference counter of an AST that was deleted or the reference counter was not initialized with #Z3_inc_ref.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3ErrorCode.html#/s:So13Z3_error_codea05SwiftA0E9exceptionABvpZ":{"name":"exception","abstract":"<p>Internal Z3 exception. Additional details can be retrieved using #Z3_get_error_msg.</p>","parent_name":"Z3ErrorCode"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opTrueABvpZ":{"name":"opTrue","abstract":"<p>The constant true.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFalseABvpZ":{"name":"opFalse","abstract":"<p>The constant false.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opEqABvpZ":{"name":"opEq","abstract":"<p>The equality predicate.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opDistinctABvpZ":{"name":"opDistinct","abstract":"<p>The n-ary distinct predicate (every argument is mutually distinct).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opIteABvpZ":{"name":"opIte","abstract":"<p>The ternary if-then-else term.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opAndABvpZ":{"name":"opAnd","abstract":"<p>n-ary conjunction.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opOrABvpZ":{"name":"opOr","abstract":"<p>n-ary disjunction.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opIffABvpZ":{"name":"opIff","abstract":"<p>equivalence (binary).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opXorABvpZ":{"name":"opXor","abstract":"<p>Exclusive or.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opNotABvpZ":{"name":"opNot","abstract":"<p>Negation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opImpliesABvpZ":{"name":"opImplies","abstract":"<p>Implication.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opOeqABvpZ":{"name":"opOeq","abstract":"<p>Binary equivalence modulo namings. This binary predicate is used in proof terms.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opAnumABvpZ":{"name":"opAnum","abstract":"<p>Arithmetic numeral.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opAgnumABvpZ":{"name":"opAgnum","abstract":"<p>Arithmetic algebraic numeral. Algebraic numbers are used to represent irrational numbers in Z3.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opLeABvpZ":{"name":"opLe","abstract":"<p>&lt;=.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opGeABvpZ":{"name":"opGe","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opLtABvpZ":{"name":"opLt","abstract":"<p>&lt;.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E4opGtABvpZ":{"name":"opGt","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opAddABvpZ":{"name":"opAdd","abstract":"<p>Addition - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opSubABvpZ":{"name":"opSub","abstract":"<p>Binary subtraction.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opUminusABvpZ":{"name":"opUminus","abstract":"<p>Unary minus.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opMulABvpZ":{"name":"opMul","abstract":"<p>Multiplication - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opDivABvpZ":{"name":"opDiv","abstract":"<p>Division - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opIdivABvpZ":{"name":"opIdiv","abstract":"<p>Integer division - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opRemABvpZ":{"name":"opRem","abstract":"<p>Remainder - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opModABvpZ":{"name":"opMod","abstract":"<p>Modulus - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opToRealABvpZ":{"name":"opToReal","abstract":"<p>Coercion of integer to real - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opToIntABvpZ":{"name":"opToInt","abstract":"<p>Coercion of real to integer - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opIsIntABvpZ":{"name":"opIsInt","abstract":"<p>Check if real is also an integer - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opPowerABvpZ":{"name":"opPower","abstract":"<p>Power operator x^y.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opStoreABvpZ":{"name":"opStore","abstract":"<p>Array store. It satisfies select(store(a,i,v),j) = if i = j then v else select(a,j).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opSelectABvpZ":{"name":"opSelect","abstract":"<p>Array select.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opConstArrayABvpZ":{"name":"opConstArray","abstract":"<p>The constant array. For example, select(const(v),i) = v holds for every v and i. The function is unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opArrayMapABvpZ":{"name":"opArrayMap","abstract":"<p>Array map operator.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opArrayDefaultABvpZ":{"name":"opArrayDefault","abstract":"<p>Default value of arrays. For example default(const(v)) = v. The function is unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opSetUnionABvpZ":{"name":"opSetUnion","abstract":"<p>Set union between two Boolean arrays (two arrays whose range type is Boolean). The function is binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opSetIntersectABvpZ":{"name":"opSetIntersect","abstract":"<p>Set intersection between two Boolean arrays. The function is binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opSetDifferenceABvpZ":{"name":"opSetDifference","abstract":"<p>Set difference between two Boolean arrays. The function is binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opSetComplementABvpZ":{"name":"opSetComplement","abstract":"<p>Set complement of a Boolean array. The function is unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opSetSubsetABvpZ":{"name":"opSetSubset","abstract":"<p>Subset predicate between two Boolean arrays. The relation is binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opAsArrayABvpZ":{"name":"opAsArray","abstract":"<p>An array value that behaves as the function graph of the","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opArrayExtABvpZ":{"name":"opArrayExt","abstract":"<p>Array extensionality function. It takes two arrays as arguments and produces an index, such that the arrays","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opSetHasSizeABvpZ":{"name":"opSetHasSize","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opSetCardABvpZ":{"name":"opSetCard","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBnumABvpZ":{"name":"opBnum","abstract":"<p>Bit-vector numeral.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBit1ABvpZ":{"name":"opBit1","abstract":"<p>One bit bit-vector.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBit0ABvpZ":{"name":"opBit0","abstract":"<p>Zero bit bit-vector.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBnegABvpZ":{"name":"opBneg","abstract":"<p>Unary minus.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBaddABvpZ":{"name":"opBadd","abstract":"<p>Binary addition.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBsubABvpZ":{"name":"opBsub","abstract":"<p>Binary subtraction.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBmulABvpZ":{"name":"opBmul","abstract":"<p>Binary multiplication.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBsdivABvpZ":{"name":"opBsdiv","abstract":"<p>Binary signed division.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBudivABvpZ":{"name":"opBudiv","abstract":"<p>Binary unsigned division.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBsremABvpZ":{"name":"opBsrem","abstract":"<p>Binary signed remainder.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBuremABvpZ":{"name":"opBurem","abstract":"<p>Binary unsigned remainder.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBsmodABvpZ":{"name":"opBsmod","abstract":"<p>Binary signed modulus.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsdiv0ABvpZ":{"name":"opBsdiv0","abstract":"<p>Unary function. bsdiv(x,0) is congruent to bsdiv0(x).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBudiv0ABvpZ":{"name":"opBudiv0","abstract":"<p>Unary function. budiv(x,0) is congruent to budiv0(x).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsrem0ABvpZ":{"name":"opBsrem0","abstract":"<p>Unary function. bsrem(x,0) is congruent to bsrem0(x).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBurem0ABvpZ":{"name":"opBurem0","abstract":"<p>Unary function. burem(x,0) is congruent to burem0(x).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsmod0ABvpZ":{"name":"opBsmod0","abstract":"<p>Unary function. bsmod(x,0) is congruent to bsmod0(x).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opUleqABvpZ":{"name":"opUleq","abstract":"<p>Unsigned bit-vector &lt;= - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opSleqABvpZ":{"name":"opSleq","abstract":"<p>Signed bit-vector  &lt;= - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opUgeqABvpZ":{"name":"opUgeq","abstract":"<p>Unsigned bit-vector  &gt;= - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opSgeqABvpZ":{"name":"opSgeq","abstract":"<p>Signed bit-vector  &gt;= - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opUltABvpZ":{"name":"opUlt","abstract":"<p>Unsigned bit-vector  &lt; - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opSltABvpZ":{"name":"opSlt","abstract":"<p>Signed bit-vector &lt; - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opUgtABvpZ":{"name":"opUgt","abstract":"<p>Unsigned bit-vector &gt; - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opSgtABvpZ":{"name":"opSgt","abstract":"<p>Signed bit-vector &gt; - Binary relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBandABvpZ":{"name":"opBand","abstract":"<p>Bit-wise and - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E5opBorABvpZ":{"name":"opBor","abstract":"<p>Bit-wise or - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBnotABvpZ":{"name":"opBnot","abstract":"<p>Bit-wise not - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBxorABvpZ":{"name":"opBxor","abstract":"<p>Bit-wise xor - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBnandABvpZ":{"name":"opBnand","abstract":"<p>Bit-wise nand - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBnorABvpZ":{"name":"opBnor","abstract":"<p>Bit-wise nor - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBxnorABvpZ":{"name":"opBxnor","abstract":"<p>Bit-wise xnor - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opConcatABvpZ":{"name":"opConcat","abstract":"<p>Bit-vector concatenation - Binary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opSignExtABvpZ":{"name":"opSignExt","abstract":"<p>Bit-vector sign extension.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opZeroExtABvpZ":{"name":"opZeroExt","abstract":"<p>Bit-vector zero extension.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opExtractABvpZ":{"name":"opExtract","abstract":"<p>Bit-vector extraction.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opRepeatABvpZ":{"name":"opRepeat","abstract":"<p>Repeat bit-vector n times.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBredorABvpZ":{"name":"opBredor","abstract":"<p>Bit-vector reduce or - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opBredandABvpZ":{"name":"opBredand","abstract":"<p>Bit-vector reduce and - Unary.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBcompABvpZ":{"name":"opBcomp","abstract":"<p>.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opBshlABvpZ":{"name":"opBshl","abstract":"<p>Shift left.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBlshrABvpZ":{"name":"opBlshr","abstract":"<p>Logical shift right.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opBashrABvpZ":{"name":"opBashr","abstract":"<p>Arithmetical shift right.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opRotateLeftABvpZ":{"name":"opRotateLeft","abstract":"<p>Left rotation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opRotateRightABvpZ":{"name":"opRotateRight","abstract":"<p>Right rotation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opExtRotateLeftABvpZ":{"name":"opExtRotateLeft","abstract":"<p>(extended) Left rotation. Similar to Z3_OP_ROTATE_LEFT, but it is a binary operator instead of a parametric one.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opExtRotateRightABvpZ":{"name":"opExtRotateRight","abstract":"<p>(extended) Right rotation. Similar to Z3_OP_ROTATE_RIGHT, but it is a binary operator instead of a parametric one.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opBit2boolABvpZ":{"name":"opBit2bool","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opInt2bvABvpZ":{"name":"opInt2bv","abstract":"<p>Coerce integer to bit-vector. NB. This function","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBv2intABvpZ":{"name":"opBv2int","abstract":"<p>Coerce bit-vector to integer. NB. This function","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opCarryABvpZ":{"name":"opCarry","abstract":"<p>Compute the carry bit in a full-adder.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opXor3ABvpZ":{"name":"opXor3","abstract":"<p>Compute ternary XOR.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opBsmulNoOvflABvpZ":{"name":"opBsmulNoOvfl","abstract":"<p>a predicate to check that bit-wise signed multiplication does not overflow.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opBumulNoOvflABvpZ":{"name":"opBumulNoOvfl","abstract":"<p>check that bit-wise unsigned multiplication does not overflow.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opBsmulNoUdflABvpZ":{"name":"opBsmulNoUdfl","abstract":"<p>check that bit-wise signed multiplication does not underflow.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsdivIABvpZ":{"name":"opBsdivI","abstract":"<p>Binary signed division.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBudivIABvpZ":{"name":"opBudivI","abstract":"<p>Binary unsigned division.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsremIABvpZ":{"name":"opBsremI","abstract":"<p>Binary signed remainder.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBuremIABvpZ":{"name":"opBuremI","abstract":"<p>Binary unsigned remainder.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opBsmodIABvpZ":{"name":"opBsmodI","abstract":"<p>Binary signed modulus.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opPrUndefABvpZ":{"name":"opPrUndef","abstract":"<p>Undef/Null proof object.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opPrTrueABvpZ":{"name":"opPrTrue","abstract":"<p>Proof for the expression &lsquo;true&rsquo;.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrAssertedABvpZ":{"name":"opPrAsserted","abstract":"<p>Proof for a fact asserted by the user.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opPrGoalABvpZ":{"name":"opPrGoal","abstract":"<p>Proof for a fact (tagged as goal) asserted by the user.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opPrModusPonensABvpZ":{"name":"opPrModusPonens","abstract":"<p>Given a proof for p and a proof for (implies p q), produces a proof for q.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opPrReflexivityABvpZ":{"name":"opPrReflexivity","abstract":"<p>A proof for (R t t), where R is a reflexive relation. This proof object has no antecedents.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrSymmetryABvpZ":{"name":"opPrSymmetry","abstract":"<p>Given an symmetric relation R and a proof for (R t s), produces a proof for (R s t).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opPrTransitivityABvpZ":{"name":"opPrTransitivity","abstract":"<p>Given a transitive relation R, and proofs for (R t s) and (R s u), produces a proof","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E20opPrTransitivityStarABvpZ":{"name":"opPrTransitivityStar","abstract":"<p>Condensed transitivity proof.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opPrMonotonicityABvpZ":{"name":"opPrMonotonicity","abstract":"<p>Monotonicity proof object.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opPrQuantIntroABvpZ":{"name":"opPrQuantIntro","abstract":"<p>Given a proof for (~ p q), produces a proof for (~ (forall (x) p) (forall (x) q)).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opPrBindABvpZ":{"name":"opPrBind","abstract":"<p>Given a proof p, produces a proof of lambda x . p, where x are free variables in p.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E18opPrDistributivityABvpZ":{"name":"opPrDistributivity","abstract":"<p>Distributivity proof object.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opPrAndElimABvpZ":{"name":"opPrAndElim","abstract":"<p>Given a proof for (and l_1 &hellip; l_n), produces a proof for l_i</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opPrNotOrElimABvpZ":{"name":"opPrNotOrElim","abstract":"<p>Given a proof for (not (or l_1 &hellip; l_n)), produces a proof for (not l_i).</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opPrRewriteABvpZ":{"name":"opPrRewrite","abstract":"<p>A proof for a local rewriting step (= t s).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opPrRewriteStarABvpZ":{"name":"opPrRewriteStar","abstract":"<p>A proof for rewriting an expression t into an expression s.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opPrPullQuantABvpZ":{"name":"opPrPullQuant","abstract":"<p>A proof for (iff (f (forall (x) q(x)) r) (forall (x) (f (q x) r))). This proof object has no antecedents.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opPrPushQuantABvpZ":{"name":"opPrPushQuant","abstract":"<p>A proof for:","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E18opPrElimUnusedVarsABvpZ":{"name":"opPrElimUnusedVars","abstract":"<p>A proof for (iff (forall (x_1 &hellip; x_n y_1 &hellip; y_m) p[x_1 &hellip; x_n])","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opPrDerABvpZ":{"name":"opPrDer","abstract":"<p>A proof for destructive equality resolution:","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opPrQuantInstABvpZ":{"name":"opPrQuantInst","abstract":"<p>A proof of (or (not (forall (x) (P x))) (P a))</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opPrHypothesisABvpZ":{"name":"opPrHypothesis","abstract":"<p>Mark a hypothesis in a natural deduction style proof.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opPrLemmaABvpZ":{"name":"opPrLemma","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">T1</span><span class=\"p\">:</span> <span class=\"kc\">false</span>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E18opPrUnitResolutionABvpZ":{"name":"opPrUnitResolution","abstract":"<p>\\nicebox{","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opPrIffTrueABvpZ":{"name":"opPrIffTrue","abstract":"<p>\\nicebox{","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrIffFalseABvpZ":{"name":"opPrIffFalse","abstract":"<p>\\nicebox{","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E17opPrCommutativityABvpZ":{"name":"opPrCommutativity","abstract":"<p>f is a commutative operator.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrDefAxiomABvpZ":{"name":"opPrDefAxiom","abstract":"<p>Proof object used to justify Tseitin&rsquo;s like axioms:","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E17opPrAssumptionAddABvpZ":{"name":"opPrAssumptionAdd","abstract":"<p>Clausal proof adding axiom</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrLemmaAddABvpZ":{"name":"opPrLemmaAdd","abstract":"<p>Clausal proof lemma addition</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opPrRedundantDelABvpZ":{"name":"opPrRedundantDel","abstract":"<p>Clausal proof lemma deletion</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opPrClauseTrailABvpZ":{"name":"opPrClauseTrail","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrDefIntroABvpZ":{"name":"opPrDefIntro","abstract":"<p>Introduces a name for a formula/term.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opPrApplyDefABvpZ":{"name":"opPrApplyDef","abstract":"<p>[apply-def T1]: F ~ n</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opPrIffOeqABvpZ":{"name":"opPrIffOeq","abstract":"<p>T1: (iff p q)","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opPrNnfPosABvpZ":{"name":"opPrNnfPos","abstract":"<p>Proof for a (positive) NNF step. Example:</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opPrNnfNegABvpZ":{"name":"opPrNnfNeg","abstract":"<p>Proof for a (negative) NNF step. Examples:</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opPrSkolemizeABvpZ":{"name":"opPrSkolemize","abstract":"<p>Proof for:</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E18opPrModusPonensOeqABvpZ":{"name":"opPrModusPonensOeq","abstract":"<p>Modus ponens style rule for equi-satisfiability.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opPrThLemmaABvpZ":{"name":"opPrThLemma","abstract":"<p>Generic proof for theory lemmas.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opPrHyperResolveABvpZ":{"name":"opPrHyperResolve","abstract":"<p>Hyper-resolution rule.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRaStoreABvpZ":{"name":"opRaStore","abstract":"<p>Insert a record into a relation.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRaEmptyABvpZ":{"name":"opRaEmpty","abstract":"<p>Creates the empty relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opRaIsEmptyABvpZ":{"name":"opRaIsEmpty","abstract":"<p>Tests if the relation is empty.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opRaJoinABvpZ":{"name":"opRaJoin","abstract":"<p>Create the relational join.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRaUnionABvpZ":{"name":"opRaUnion","abstract":"<p>Create the union or convex hull of two relations.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRaWidenABvpZ":{"name":"opRaWiden","abstract":"<p>Widen two relations.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opRaProjectABvpZ":{"name":"opRaProject","abstract":"<p>Project the columns (provided as numbers in the parameters).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opRaFilterABvpZ":{"name":"opRaFilter","abstract":"<p>Filter (restrict) a relation with respect to a predicate.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E18opRaNegationFilterABvpZ":{"name":"opRaNegationFilter","abstract":"<p>Intersect the first relation with respect to negation","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opRaRenameABvpZ":{"name":"opRaRename","abstract":"<p>rename columns in the relation.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opRaComplementABvpZ":{"name":"opRaComplement","abstract":"<p>Complement the relation.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opRaSelectABvpZ":{"name":"opRaSelect","abstract":"<p>Check if a record is an element of the relation.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRaCloneABvpZ":{"name":"opRaClone","abstract":"<p>Create a fresh copy (clone) of a relation.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opFdConstantABvpZ":{"name":"opFdConstant","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opFdLtABvpZ":{"name":"opFdLt","abstract":"<p>A less than predicate over the finite domain Z3_FINITE_DOMAIN_SORT.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opSeqUnitABvpZ":{"name":"opSeqUnit","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opSeqEmptyABvpZ":{"name":"opSeqEmpty","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opSeqConcatABvpZ":{"name":"opSeqConcat","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opSeqPrefixABvpZ":{"name":"opSeqPrefix","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opSeqSuffixABvpZ":{"name":"opSeqSuffix","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opSeqContainsABvpZ":{"name":"opSeqContains","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opSeqExtractABvpZ":{"name":"opSeqExtract","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opSeqReplaceABvpZ":{"name":"opSeqReplace","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opSeqReplaceReABvpZ":{"name":"opSeqReplaceRe","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E17opSeqReplaceReAllABvpZ":{"name":"opSeqReplaceReAll","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opSeqReplaceAllABvpZ":{"name":"opSeqReplaceAll","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opSeqAtABvpZ":{"name":"opSeqAt","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opSeqNthABvpZ":{"name":"opSeqNth","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opSeqLengthABvpZ":{"name":"opSeqLength","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opSeqIndexABvpZ":{"name":"opSeqIndex","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opSeqLastIndexABvpZ":{"name":"opSeqLastIndex","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opSeqToReABvpZ":{"name":"opSeqToRe","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opSeqInReABvpZ":{"name":"opSeqInRe","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opStrToIntABvpZ":{"name":"opStrToInt","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opIntToStrABvpZ":{"name":"opIntToStr","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opUbvToStrABvpZ":{"name":"opUbvToStr","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opSbvToStrABvpZ":{"name":"opSbvToStr","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opStrToCodeABvpZ":{"name":"opStrToCode","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opStrFromCodeABvpZ":{"name":"opStrFromCode","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opStringLtABvpZ":{"name":"opStringLt","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opStringLeABvpZ":{"name":"opStringLe","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opRePlusABvpZ":{"name":"opRePlus","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opReStarABvpZ":{"name":"opReStar","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opReOptionABvpZ":{"name":"opReOption","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opReConcatABvpZ":{"name":"opReConcat","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opReUnionABvpZ":{"name":"opReUnion","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opReRangeABvpZ":{"name":"opReRange","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opReDiffABvpZ":{"name":"opReDiff","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opReIntersectABvpZ":{"name":"opReIntersect","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opReLoopABvpZ":{"name":"opReLoop","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opRePowerABvpZ":{"name":"opRePower","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opReComplementABvpZ":{"name":"opReComplement","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opReEmptySetABvpZ":{"name":"opReEmptySet","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opReFullSetABvpZ":{"name":"opReFullSet","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opReFullCharSetABvpZ":{"name":"opReFullCharSet","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opReOfPredABvpZ":{"name":"opReOfPred","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opReReverseABvpZ":{"name":"opReReverse","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opReDerivativeABvpZ":{"name":"opReDerivative","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opCharConstABvpZ":{"name":"opCharConst","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opCharLeABvpZ":{"name":"opCharLe","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opCharToIntABvpZ":{"name":"opCharToInt","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opCharToBvABvpZ":{"name":"opCharToBv","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opCharFromBvABvpZ":{"name":"opCharFromBv","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opCharIsDigitABvpZ":{"name":"opCharIsDigit","abstract":"<p>Undocumented</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opLabelABvpZ":{"name":"opLabel","abstract":"<p>A label (used by the Boogie Verification condition generator).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opLabelLitABvpZ":{"name":"opLabelLit","abstract":"<p>A label literal (used by the Boogie Verification condition generator).","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opDtConstructorABvpZ":{"name":"opDtConstructor","abstract":"<p>datatype constructor.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opDtRecogniserABvpZ":{"name":"opDtRecogniser","abstract":"<p>datatype recognizer.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opDtIsABvpZ":{"name":"opDtIs","abstract":"<p>datatype recognizer.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opDtAccessorABvpZ":{"name":"opDtAccessor","abstract":"<p>datatype accessor.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opDtUpdateFieldABvpZ":{"name":"opDtUpdateField","abstract":"<p>datatype field update.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opPbAtMostABvpZ":{"name":"opPbAtMost","abstract":"<p>Cardinality constraint.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opPbAtLeastABvpZ":{"name":"opPbAtLeast","abstract":"<p>Cardinality constraint.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opPbLeABvpZ":{"name":"opPbLe","abstract":"<p>Generalized Pseudo-Boolean cardinality constraint.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opPbGeABvpZ":{"name":"opPbGe","abstract":"<p>Generalized Pseudo-Boolean cardinality constraint.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E6opPbEqABvpZ":{"name":"opPbEq","abstract":"<p>Generalized Pseudo-Boolean equality constraint.","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E19opSpecialRelationLoABvpZ":{"name":"opSpecialRelationLo","abstract":"<p>A relation that is a total linear order</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E19opSpecialRelationPoABvpZ":{"name":"opSpecialRelationPo","abstract":"<p>A relation that is a partial order</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E20opSpecialRelationPloABvpZ":{"name":"opSpecialRelationPlo","abstract":"<p>A relation that is a piecewise linear order</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E19opSpecialRelationToABvpZ":{"name":"opSpecialRelationTo","abstract":"<p>A relation that is a tree order</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E19opSpecialRelationTcABvpZ":{"name":"opSpecialRelationTc","abstract":"<p>Transitive closure of a relation</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E20opSpecialRelationTrcABvpZ":{"name":"opSpecialRelationTrc","abstract":"<p>Transitive reflexive closure of a relation</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E24opFpaRmNearestTiesToEvenABvpZ":{"name":"opFpaRmNearestTiesToEven","abstract":"<p>Floating-point rounding mode RNE</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E24opFpaRmNearestTiesToAwayABvpZ":{"name":"opFpaRmNearestTiesToAway","abstract":"<p>Floating-point rounding mode RNA</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E21opFpaRmTowardPositiveABvpZ":{"name":"opFpaRmTowardPositive","abstract":"<p>Floating-point rounding mode RTP</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E21opFpaRmTowardNegativeABvpZ":{"name":"opFpaRmTowardNegative","abstract":"<p>Floating-point rounding mode RTN</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E17opFpaRmTowardZeroABvpZ":{"name":"opFpaRmTowardZero","abstract":"<p>Floating-point rounding mode RTZ</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaNumABvpZ":{"name":"opFpaNum","abstract":"<p>Floating-point value</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E12opFpaPlusInfABvpZ":{"name":"opFpaPlusInf","abstract":"<p>Floating-point +oo</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opFpaMinusInfABvpZ":{"name":"opFpaMinusInf","abstract":"<p>Floating-point -oo</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaNanABvpZ":{"name":"opFpaNan","abstract":"<p>Floating-point NaN</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opFpaPlusZeroABvpZ":{"name":"opFpaPlusZero","abstract":"<p>Floating-point +zero</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E14opFpaMinusZeroABvpZ":{"name":"opFpaMinusZero","abstract":"<p>Floating-point -zero</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaAddABvpZ":{"name":"opFpaAdd","abstract":"<p>Floating-point addition</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaSubABvpZ":{"name":"opFpaSub","abstract":"<p>Floating-point subtraction</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaNegABvpZ":{"name":"opFpaNeg","abstract":"<p>Floating-point negation</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaMulABvpZ":{"name":"opFpaMul","abstract":"<p>Floating-point multiplication</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaDivABvpZ":{"name":"opFpaDiv","abstract":"<p>Floating-point division</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaRemABvpZ":{"name":"opFpaRem","abstract":"<p>Floating-point remainder</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaAbsABvpZ":{"name":"opFpaAbs","abstract":"<p>Floating-point absolute value</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaMinABvpZ":{"name":"opFpaMin","abstract":"<p>Floating-point minimum</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaMaxABvpZ":{"name":"opFpaMax","abstract":"<p>Floating-point maximum</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E8opFpaFmaABvpZ":{"name":"opFpaFma","abstract":"<p>Floating-point fused multiply-add</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opFpaSqrtABvpZ":{"name":"opFpaSqrt","abstract":"<p>Floating-point square root</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E20opFpaRoundToIntegralABvpZ":{"name":"opFpaRoundToIntegral","abstract":"<p>Floating-point round to integral</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaEqABvpZ":{"name":"opFpaEq","abstract":"<p>Floating-point equality</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaLtABvpZ":{"name":"opFpaLt","abstract":"<p>Floating-point less than</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaGtABvpZ":{"name":"opFpaGt","abstract":"<p>Floating-point greater than</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaLeABvpZ":{"name":"opFpaLe","abstract":"<p>Floating-point less than or equal</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaGeABvpZ":{"name":"opFpaGe","abstract":"<p>Floating-point greater than or equal</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opFpaIsNanABvpZ":{"name":"opFpaIsNan","abstract":"<p>Floating-point isNaN</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opFpaIsInfABvpZ":{"name":"opFpaIsInf","abstract":"<p>Floating-point isInfinite</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opFpaIsZeroABvpZ":{"name":"opFpaIsZero","abstract":"<p>Floating-point isZero</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opFpaIsNormalABvpZ":{"name":"opFpaIsNormal","abstract":"<p>Floating-point isNormal</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E16opFpaIsSubnormalABvpZ":{"name":"opFpaIsSubnormal","abstract":"<p>Floating-point isSubnormal</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opFpaIsNegativeABvpZ":{"name":"opFpaIsNegative","abstract":"<p>Floating-point isNegative</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opFpaIsPositiveABvpZ":{"name":"opFpaIsPositive","abstract":"<p>Floating-point isPositive</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E7opFpaFpABvpZ":{"name":"opFpaFp","abstract":"<p>Floating-point constructor from 3 bit-vectors</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E9opFpaToFpABvpZ":{"name":"opFpaToFp","abstract":"<p>Floating-point conversion (various)</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E17opFpaToFpUnsignedABvpZ":{"name":"opFpaToFpUnsigned","abstract":"<p>Floating-point conversion from unsigned bit-vector</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opFpaToUbvABvpZ":{"name":"opFpaToUbv","abstract":"<p>Floating-point conversion to unsigned bit-vector</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opFpaToSbvABvpZ":{"name":"opFpaToSbv","abstract":"<p>Floating-point conversion to signed bit-vector</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opFpaToRealABvpZ":{"name":"opFpaToReal","abstract":"<p>Floating-point conversion to real number</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E13opFpaToIeeeBvABvpZ":{"name":"opFpaToIeeeBv","abstract":"<p>Floating-point conversion to IEEE-754 bit-vector</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opFpaBvwrapABvpZ":{"name":"opFpaBvwrap","abstract":"<p>(Implicitly) represents the internal bitvector-","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opFpaBv2rmABvpZ":{"name":"opFpaBv2rm","abstract":"<p>Conversion of a 3-bit bit-vector term to a","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E10opInternalABvpZ":{"name":"opInternal","abstract":"<p>internal (often interpreted) symbol, but no additional","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E11opRecursiveABvpZ":{"name":"opRecursive","abstract":"<p>function declared as recursive</p>","parent_name":"Z3DeclKind"},"Extensions/Z3DeclKind.html#/s:So12Z3_decl_kinda05SwiftA0E15opUninterpretedABvpZ":{"name":"opUninterpreted","abstract":"<p>kind used for uninterpreted symbols.</p>","parent_name":"Z3DeclKind"},"Extensions/Z3AstPrintMode.html#/s:So17Z3_ast_print_modea05SwiftA0E0C10SmtlibFullABvpZ":{"name":"printSmtlibFull","abstract":"<p>Print AST nodes in SMTLIB verbose format.</p>","parent_name":"Z3AstPrintMode"},"Extensions/Z3AstPrintMode.html#/s:So17Z3_ast_print_modea05SwiftA0E0C8LowLevelABvpZ":{"name":"printLowLevel","abstract":"<p>Print AST nodes using a low-level format.</p>","parent_name":"Z3AstPrintMode"},"Extensions/Z3AstPrintMode.html#/s:So17Z3_ast_print_modea05SwiftA0E0C16Smtlib2CompliantABvpZ":{"name":"printSmtlib2Compliant","abstract":"<p>Print AST nodes in SMTLIB 2.x compliant format.</p>","parent_name":"Z3AstPrintMode"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E10numeralAstABvpZ":{"name":"numeralAst","abstract":"<p>numeral constants</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E6appAstABvpZ":{"name":"appAst","abstract":"<p>constant and applications</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E6varAstABvpZ":{"name":"varAst","abstract":"<p>bound variables</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E13quantifierAstABvpZ":{"name":"quantifierAst","abstract":"<p>quantifiers</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E7sortAstABvpZ":{"name":"sortAst","abstract":"<p>sort</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E11funcDeclAstABvpZ":{"name":"funcDeclAst","abstract":"<p>function declaration</p>","parent_name":"Z3AstKind"},"Extensions/Z3AstKind.html#/s:So11Z3_ast_kinda05SwiftA0E10unknownAstABvpZ":{"name":"unknownAst","abstract":"<p>internal</p>","parent_name":"Z3AstKind"},"Extensions/Z3Bool.html#/s:7SwiftZ30B3AstCAASbRszrlE7getSortyAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code>Bool</code> from this","parent_name":"Z3Bool"},"Extensions/Z3Bool.html#/s:7SwiftZ30B3AstCAASbRszrlE1nopyACySbGAEFZ":{"name":"!(_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Bool"},"Extensions/Z3Bool.html#/s:7SwiftZ30B3AstCAASbRszrlE2aaoiyACySbGAE_AEtFZ":{"name":"&&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Bool"},"Extensions/Z3Bool.html#/s:7SwiftZ30B3AstCAASbRszrlE2oooiyACySbGAE_AEtFZ":{"name":"||(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Bool"},"Extensions/Z3Array.html#/s:7SwiftZ30B3AstC7getSortyAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed array Z3Sort associated with <code>ArraySort&lt;D, R&gt;</code>","parent_name":"Z3Array"},"Extensions/Z3Array.html#/s:7SwiftZ30B3AstCyACyqd_0_GACyqd__GcAA9ArraySortVyqd__qd_0_GRszAA0E4KindRd__AaIRd_0_r0_luip":{"name":"subscript(_:)","abstract":"<p>Array read.</p>","parent_name":"Z3Array"},"Extensions/Z3RoundingMode.html#/s:7SwiftZ30B3AstCA2A16RoundingModeSortVRszrlE03getF0yAA0bF0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RoundingModeSort.html\">RoundingModeSort</a></code> from","parent_name":"Z3RoundingMode"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE03getE0yAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code>T</code> from this","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE10squareRootACyxGvp":{"name":"squareRoot","abstract":"<p>Floating-point square root.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE8isNormalACySbGvp":{"name":"isNormal","abstract":"<p>Predicate indicating whether <code>t</code> is a normal floating-point number.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE11isSubnormalACySbGvp":{"name":"isSubnormal","abstract":"<p>Predicate indicating whether <code>t</code> is a subnormal floating-point number.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE5isNanACySbGvp":{"name":"isNan","abstract":"<p>Predicate indicating whether <code>t</code> is a NaN.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE6isZeroACySbGvp":{"name":"isZero","abstract":"<p>Predicate indicating whether <code>t</code> is a floating-point number with zero","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE10isInfiniteACySbGvp":{"name":"isInfinite","abstract":"<p>Predicate indicating whether <code>t</code> is a floating-point number representing","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE10isPositiveACySbGvp":{"name":"isPositive","abstract":"<p>Predicate indicating whether <code>t</code> is a positive floating-point number.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE10isNegativeACySbGvp":{"name":"isNegative","abstract":"<p>Predicate indicating whether <code>t</code> is a negative floating-point number.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE15isNumeralNormalSbvp":{"name":"isNumeralNormal","abstract":"<p>Checks whether this floating-point numeral is a NaN.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE18isNumeralSubnormalSbvp":{"name":"isNumeralSubnormal","abstract":"<p>Checks whether this floating-point numeral is a +oo or -oo.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE12isNumeralNanSbvp":{"name":"isNumeralNan","abstract":"<p>Checks whether this floating-point numeral is +zero or -zero.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE13isNumeralZeroSbvp":{"name":"isNumeralZero","abstract":"<p>Checks whether this floating-point numeral is normal.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE17isNumeralInfiniteSbvp":{"name":"isNumeralInfinite","abstract":"<p>Checks whether this floating-point numeral is subnormal.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE17isNumeralPositiveSbvp":{"name":"isNumeralPositive","abstract":"<p>Checks whether this floating-point numeral is positive.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE17isNumeralNegativeSbvp":{"name":"isNumeralNegative","abstract":"<p>Checks whether this floating-point numeral is negative.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE9convertTo12roundingMode4sortACyqd__GACyAA08RoundingiE0VG_qd__mtAaDRd__lF":{"name":"convertTo(roundingMode:sort:)","abstract":"<p>Conversion of a FloatingPoint term into another term of different","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE12convertToAny12roundingMode4sortAA0hbC0CACyAA08RoundingjE0VG_AA0bE0CtF":{"name":"convertToAny(roundingMode:sort:)","abstract":"<p>Conversion of a FloatingPoint term into another term of different","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE13convertToRealACyAA0hE0VGyF":{"name":"convertToReal()","abstract":"<p>Conversion of a floating-point term into a real-numbered term.</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE18convertToBitVector12roundingMode4sort6signedACyqd__GACyAA08RoundingkE0VG_qd__mSbtAA0hiE0Rd__lF":{"name":"convertToBitVector(roundingMode:sort:signed:)","abstract":"<p>Produces a term that represents the conversion of this floating-point term","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE21convertToBitVectorAny12roundingMode_6signedAA0jbC0CACyAA08RoundinglE0VG_s6UInt32VSbtF":{"name":"convertToBitVectorAny(roundingMode:_:signed:)","abstract":"<p>Produces a term that represents the conversion of this floating-point term","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1sopyACyxGAFFZ":{"name":"-(_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE2geoiyACySbGACyxG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1goiyACySbGACyxG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE2leoiyACySbGACyxG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1loiyACySbGACyxG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1poiyACyxGAF_AFtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1soiyACyxGAF_AFtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1moiyACyxGAF_AFtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1doiyACyxGAF_AFtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCA2A12FloatingSortRzrlE1roiyACyxGAF_AFtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2eeoiyACySbGx_ACyxGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2eeoiyACySbGACyxG_xtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2neoiyACySbGx_ACyxGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2neoiyACySbGACyxG_xtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2geoiyACySbGx_ACyxGtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2geoiyACySbGACyxG_xtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1goiyACySbGx_ACyxGtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1goiyACySbGACyxG_xtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2leoiyACySbGx_ACyxGtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE2leoiyACySbGACyxG_xtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1loiyACySbGx_ACyxGtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1loiyACySbGACyxG_xtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1poiyACyxGx_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1poiyACyxGAG_xtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1soiyACyxGx_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1soiyACyxGAG_xtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1moiyACyxGx_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1moiyACyxGAG_xtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1doiyACyxGx_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1doiyACyxGAG_xtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1roiyACyxGAG_xtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3FloatingPoint.html#/s:7SwiftZ30B3AstCAASBRzs25LosslessStringConvertibleRzAA12FloatingSortRzrlE1roiyACyxGx_AGtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3FloatingPoint"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1doiyACyAHGAJ_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1aoiyACyAHGAJ_AGtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1aoiyACyAHGAG_AJtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1ooiyACyAHGAJ_AGtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1ooiyACyAHGAG_AJtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1xoiyACyAHGAJ_AGtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1xoiyACyAHGAG_AJtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1poiyACyAHGAJ_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1poiyACyAHGAG_AJtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1soiyACyAHGAJ_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1soiyACyAHGAG_AJtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1moiyACyAHGAJ_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1moiyACyAHGAG_AJtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1doiyACyAHGAJ_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1doiyACyAHGAG_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2eeoiyACySbGAG_ACyAHGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2eeoiyACySbGACyAHG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2neoiyACySbGAG_ACyAHGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2neoiyACySbGACyAHG_AGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1loiyACySbGACyAHG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned less than.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1loiyACySbGAG_ACyAHGtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned less than.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2leoiyACySbGACyAHG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned less than or equal to.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2leoiyACySbGAG_ACyAHGtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1goiyACySbGACyAHG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned greater than.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE1goiyACySbGAG_ACyAHGtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2geoiyACySbGACyAHG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt64VGRszrlE2geoiyACySbGAG_ACyAHGtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU64"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1doiyACyAHGAJ_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1aoiyACyAHGAJ_AGtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1aoiyACyAHGAG_AJtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1ooiyACyAHGAJ_AGtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1ooiyACyAHGAG_AJtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1xoiyACyAHGAJ_AGtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1xoiyACyAHGAG_AJtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1poiyACyAHGAJ_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1poiyACyAHGAG_AJtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1soiyACyAHGAJ_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1soiyACyAHGAG_AJtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1moiyACyAHGAJ_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1moiyACyAHGAG_AJtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1doiyACyAHGAJ_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1doiyACyAHGAG_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2eeoiyACySbGAG_ACyAHGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2eeoiyACySbGACyAHG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2neoiyACySbGAG_ACyAHGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2neoiyACySbGACyAHG_AGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1loiyACySbGACyAHG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned less than.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1loiyACySbGAG_ACyAHGtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned less than.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2leoiyACySbGACyAHG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned less than or equal to.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2leoiyACySbGAG_ACyAHGtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1goiyACySbGACyAHG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned greater than.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE1goiyACySbGAG_ACyAHGtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2geoiyACySbGACyAHG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys6UInt32VGRszrlE2geoiyACySbGAG_ACyAHGtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3BitVectorU32"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1aoiyACyAHGAJ_AGtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1aoiyACyAHGAG_AJtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1ooiyACyAHGAJ_AGtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1ooiyACyAHGAG_AJtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1xoiyACyAHGAJ_AGtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1xoiyACyAHGAG_AJtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1poiyACyAHGAJ_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1poiyACyAHGAG_AJtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1soiyACyAHGAJ_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1soiyACyAHGAG_AJtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1moiyACyAHGAJ_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1moiyACyAHGAG_AJtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1doiyACyAHGAJ_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1doiyACyAHGAG_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2eeoiyACySbGAG_ACyAHGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2eeoiyACySbGACyAHG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2neoiyACySbGAG_ACyAHGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2neoiyACySbGACyAHG_AGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1loiyACySbGACyAHG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1loiyACySbGAG_ACyAHGtFZ":{"name":"<(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2leoiyACySbGACyAHG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than or equal to.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2leoiyACySbGAG_ACyAHGtFZ":{"name":"<=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1goiyACySbGACyAHG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE1goiyACySbGAG_ACyAHGtFZ":{"name":">(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2geoiyACySbGACyAHG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector64.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int64VGRszrlE2geoiyACySbGAG_ACyAHGtFZ":{"name":">=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector64"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1aoiyACyAHGAJ_AGtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1aoiyACyAHGAG_AJtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1ooiyACyAHGAJ_AGtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1ooiyACyAHGAG_AJtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1xoiyACyAHGAJ_AGtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1xoiyACyAHGAG_AJtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1poiyACyAHGAJ_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1poiyACyAHGAG_AJtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1soiyACyAHGAJ_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1soiyACyAHGAG_AJtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1moiyACyAHGAJ_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1moiyACyAHGAG_AJtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1doiyACyAHGAJ_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1doiyACyAHGAG_AJtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2eeoiyACySbGAG_ACyAHGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2eeoiyACySbGACyAHG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2neoiyACySbGAG_ACyAHGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2neoiyACySbGACyAHG_AGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1loiyACySbGACyAHG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1loiyACySbGAG_ACyAHGtFZ":{"name":"<(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2leoiyACySbGACyAHG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than or equal to.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2leoiyACySbGAG_ACyAHGtFZ":{"name":"<=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1goiyACySbGACyAHG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE1goiyACySbGAG_ACyAHGtFZ":{"name":">(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2geoiyACySbGACyAHG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector32.html#/s:7SwiftZ30B3AstCA2A14BitVectorOfIntVys5Int32VGRszrlE2geoiyACySbGAG_ACyAHGtFZ":{"name":">=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector32"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1aoiyACyAEGAG_s6UInt32VtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1aoiyACyAEGs6UInt32V_AGtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1ooiyACyAEGAG_s6UInt32VtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1ooiyACyAEGs6UInt32V_AGtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1xoiyACyAEGAG_s6UInt32VtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1xoiyACyAEGs6UInt32V_AGtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1poiyACyAEGAG_s6UInt32VtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1poiyACyAEGs6UInt32V_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1soiyACyAEGAG_s6UInt32VtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1soiyACyAEGs6UInt32V_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1moiyACyAEGAG_s6UInt32VtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1moiyACyAEGs6UInt32V_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1doiyACyAEGAG_s6UInt32VtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1doiyACyAEGs6UInt32V_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2eeoiyACySbGs6UInt32V_ACyAEGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2eeoiyACySbGACyAEG_s6UInt32VtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2neoiyACySbGs6UInt32V_ACyAEGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2neoiyACySbGACyAEG_s6UInt32VtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1loiyACySbGACyAEG_s6UInt32VtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned signed less than.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1loiyACySbGs6UInt32V_ACyAEGtFZ":{"name":"<(_:_:)","abstract":"<p>Unsigned signed less than.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2leoiyACySbGACyAEG_s6UInt32VtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned less than or equal to.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2leoiyACySbGs6UInt32V_ACyAEGtFZ":{"name":"<=(_:_:)","abstract":"<p>Unsigned signed greater than or equal to.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1goiyACySbGACyAEG_s6UInt32VtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned signed greater than.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE1goiyACySbGs6UInt32V_ACyAEGtFZ":{"name":">(_:_:)","abstract":"<p>Unsigned signed greater than or equal to.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2geoiyACySbGACyAEG_s6UInt32VtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned signed greater than or equal to.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector1.html#/s:7SwiftZ30B3AstCA2A14BitVectorSort1VRszrlE2geoiyACySbGs6UInt32V_ACyAEGtFZ":{"name":">=(_:_:)","abstract":"<p>Unsigned signed greater than or equal to.</p>","parent_name":"Z3BitVector1"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE03getF0yAA0bF0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code>T</code> from this","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE5toInt8isSignedACyAA0hF0VGSb_tF":{"name":"toInt(isSigned:)","abstract":"<p>Create an integer from this bit-vector.</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1aoiyACyxGAF_AFtFZ":{"name":"&(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1ooiyACyxGAF_AFtFZ":{"name":"|(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1xoiyACyxGAF_AFtFZ":{"name":"^(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1poiyACyxGAF_AFtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1soiyACyxGAF_AFtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1moiyACyxGAF_AFtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1doiyACyxGAF_AFtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1loiyACySbGACyxG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE2leoiyACySbGACyxG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than or equal to.</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1goiyACySbGACyxG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than.</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE2geoiyACySbGACyxG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1sopyACyxGAFFZ":{"name":"-(_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/Z3BitVector.html#/s:7SwiftZ30B3AstCA2A13BitVectorSortRzrlE1nopyACyxGAFFZ":{"name":"!(_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3BitVector"},"Extensions/AnyZ3BitVector.html#/s:7SwiftZ30B3AstCA2A16AnyBitVectorSortVRszrlE5toInt8isSignedACyAA0iG0VGSb_tF":{"name":"toInt(isSigned:)","abstract":"<p>Create an integer from this bit-vector.</p>","parent_name":"AnyZ3BitVector"},"Extensions/Z3Real.html#/s:7SwiftZ30B3AstCA2A8RealSortVRszrlE03getE0yAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RealSort.html\">RealSort</a></code> from","parent_name":"Z3Real"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE03getE0yAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/IntSort.html\">IntSort</a></code> from","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1roiyACyAEGAG_AGtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2eeoiyACySbGs5Int32V_ACyAEGtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2eeoiyACySbGACyAEG_s5Int32VtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2neoiyACySbGs5Int32V_ACyAEGtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2neoiyACySbGACyAEG_s5Int32VtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1loiyACySbGs5Int32V_ACyAEGtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1loiyACySbGACyAEG_s5Int32VtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2leoiyACySbGs5Int32V_ACyAEGtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2leoiyACySbGACyAEG_s5Int32VtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1goiyACySbGs5Int32V_ACyAEGtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1goiyACySbGACyAEG_s5Int32VtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2geoiyACySbGs5Int32V_ACyAEGtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE2geoiyACySbGACyAEG_s5Int32VtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1poiyACyAEGs5Int32V_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1poiyACyAEGAG_s5Int32VtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1soiyACyAEGs5Int32V_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1soiyACyAEGAG_s5Int32VtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1moiyACyAEGs5Int32V_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1moiyACyAEGAG_s5Int32VtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1doiyACyAEGs5Int32V_AGtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1doiyACyAEGAG_s5Int32VtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1roiyACyAEGs5Int32V_AGtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html#/s:7SwiftZ30B3AstCA2A7IntSortVRszrlE1roiyACyAEGAG_s5Int32VtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Int"},"Extensions/Z3Int.html":{"name":"Z3Int"},"Extensions/Z3Real.html":{"name":"Z3Real"},"Extensions/AnyZ3BitVector.html":{"name":"AnyZ3BitVector"},"Extensions/Z3BitVector.html":{"name":"Z3BitVector"},"Extensions/Z3BitVector1.html":{"name":"Z3BitVector1"},"Extensions/Z3BitVector32.html":{"name":"Z3BitVector32"},"Extensions/Z3BitVector64.html":{"name":"Z3BitVector64"},"Extensions/Z3BitVectorU32.html":{"name":"Z3BitVectorU32"},"Extensions/Z3BitVectorU64.html":{"name":"Z3BitVectorU64"},"Extensions/Z3FloatingPoint.html":{"name":"Z3FloatingPoint"},"Extensions/Z3RoundingMode.html":{"name":"Z3RoundingMode"},"Extensions/Z3Array.html":{"name":"Z3Array"},"Extensions/Z3Bool.html":{"name":"Z3Bool"},"Extensions/Z3AstKind.html":{"name":"Z3AstKind"},"Extensions/Z3AstPrintMode.html":{"name":"Z3AstPrintMode"},"Extensions/Z3DeclKind.html":{"name":"Z3DeclKind"},"Extensions/Z3ErrorCode.html":{"name":"Z3ErrorCode"},"Extensions/Z3GoalPrec.html":{"name":"Z3GoalPrec"},"Extensions/Z3LBool.html":{"name":"Z3LBool"},"Extensions/Z3ParamKind.html":{"name":"Z3ParamKind"},"Extensions/Z3ParameterKind.html":{"name":"Z3ParameterKind"},"Extensions/Z3SortKind.html":{"name":"Z3SortKind"},"Extensions/Z3SymbolKind.html":{"name":"Z3SymbolKind"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Double.html":{"name":"Double"},"Extensions/Float.html":{"name":"Float"},"Extensions/Float80.html":{"name":"Float80"},"Enums/Z3GlobalParameters.html#/s:7SwiftZ30B16GlobalParametersO8resetAllyyFZ":{"name":"resetAll()","parent_name":"Z3GlobalParameters"},"Enums/Z3GlobalParameters.html#/s:7SwiftZ30B16GlobalParametersO12getParameter2idSSSgSS_tFZ":{"name":"getParameter(id:)","abstract":"<p>Get a global (or module) parameter.</p>","parent_name":"Z3GlobalParameters"},"Enums/Z3GlobalParameters.html#/s:7SwiftZ30B16GlobalParametersO12setParameter2id5valueySS_SStFZ":{"name":"setParameter(id:value:)","abstract":"<p>Set a global (or module) parameter.","parent_name":"Z3GlobalParameters"},"Enums/Status.html#/s:7SwiftZ36StatusO11satisfiableyA2CmF":{"name":"satisfiable","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:7SwiftZ36StatusO13unsatisfiableyA2CmF":{"name":"unsatisfiable","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html#/s:7SwiftZ36StatusO7unknownyA2CmF":{"name":"unknown","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Enums/Status.html":{"name":"Status","abstract":"<p>Status for invocations of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Solver.html\">Z3Solver</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Optimize.html\">Z3Optimize</a></code> check methods</p>"},"Enums/Z3GlobalParameters.html":{"name":"Z3GlobalParameters","abstract":"<p>Contains static APIs for configuring global parameters for all Z3 contexts.</p>"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Tactic</code> belongs</p>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC4helpSSvp":{"name":"help","abstract":"<p>Return a string containing a description of parameters accepted by this","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC14getParamDescrsAA0beF0CyF":{"name":"getParamDescrs()","abstract":"<p>Return the parameter description set for this tactic object.</p>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC7andThenyA2CF":{"name":"andThen(_:)","abstract":"<p>Return a tactic that applies <code>self</code> to a given goal and <code>next</code> to every","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC6orElseyA2CF":{"name":"orElse(_:)","abstract":"<p>Return a tactic that first applies <code>self</code> to a given goal, if it fails","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC15parallelAndThenyA2CF":{"name":"parallelAndThen(_:)","abstract":"<p>Return a tactic that applies <code>self</code> to a given goal and then <code>other</code>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC6tryFor12millisecondsACs6UInt32V_tF":{"name":"tryFor(milliseconds:)","abstract":"<p>Return a tactic that applies <code>self</code> to a given goal for <code>milliseconds</code>.","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC4whenyAcA0B5ProbeCF":{"name":"when(_:)","abstract":"<p>Return a tactic that applies <code>self</code> to a given goal is the probe <code>probe</code>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC11conditional7ifProbe4elseAcA0bF0C_ACtF":{"name":"conditional(ifProbe:else:)","abstract":"<p>Return a tactic that applies <code>self</code> to a given goal if the probe <code>probe</code>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC9repeating3maxACs6UInt32V_tF":{"name":"repeating(max:)","abstract":"<p>Return a tactic that keeps applying <code>self</code> until the goal is not modified","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC11usingParamsyAcA0bE0CF":{"name":"usingParams(_:)","abstract":"<p>Return a tactic that applies <code>self</code> using the given set of parameters.</p>","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC5apply2to6paramsAA0B11ApplyResultCAA0B4GoalC_AA0B6ParamsCSgtF":{"name":"apply(to:params:)","abstract":"<p>Apply tactic <code>self</code> to <code>goal</code>, optionally using a set of parameters","parent_name":"Z3Tactic"},"Classes/Z3Tactic.html#/s:7SwiftZ30B6TacticC10parallelOryACSayACGFZ":{"name":"parallelOr(_:)","abstract":"<p>Return a tactic that applies the given tactics in parallel.</p>","parent_name":"Z3Tactic"},"Classes/Z3Symbol.html#/s:7SwiftZ30B6SymbolC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Symbol</code> belongs</p>","parent_name":"Z3Symbol"},"Classes/Z3Symbol.html#/s:7SwiftZ30B6SymbolC10symbolKindSo0b1_D5_kindavp":{"name":"symbolKind","abstract":"<p>Return <code>Z3SymbolKind.intSymbol</code> if the symbol was constructed using","parent_name":"Z3Symbol"},"Classes/Z3Symbol.html#/s:7SwiftZ30B6SymbolC9symbolInts5Int32Vvp":{"name":"symbolInt","abstract":"<p>Return the symbol int value.</p>","parent_name":"Z3Symbol"},"Classes/Z3Symbol.html#/s:7SwiftZ30B6SymbolC12symbolStringSSvp":{"name":"symbolString","abstract":"<p>Return the symbol name.</p>","parent_name":"Z3Symbol"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Stats</code> belongs</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Return the number of statistical data in this stats instance.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert a statistics into a string.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC6getKeyySSs6UInt32VF":{"name":"getKey(_:)","abstract":"<p>Return the key (a string) for a particular statistical data.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC6isUIntySbs6UInt32VF":{"name":"isUInt(_:)","abstract":"<p>Return <code>true</code> if the given statistical data is a unsigned integer.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC8isDoubleySbs6UInt32VF":{"name":"isDouble(_:)","abstract":"<p>Return <code>true</code> if the given statistical data is a double.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC12getUIntValueys6UInt32VAFF":{"name":"getUIntValue(_:)","abstract":"<p>Return the unsigned value of the given statistical data.</p>","parent_name":"Z3Stats"},"Classes/Z3Stats.html#/s:7SwiftZ30B5StatsC14getDoubleValueySds6UInt32VF":{"name":"getDoubleValue(_:)","abstract":"<p>Return the double of the given statistical data.</p>","parent_name":"Z3Stats"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Solver</code> belongs</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC7getHelpSSyF":{"name":"getHelp()","abstract":"<p>Return a string describing all solver available parameters.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC9setParamsyyAA0bE0CF":{"name":"setParams(_:)","abstract":"<p>Set this solver using the given parameters.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC14getParamDescrsAA0beF0CyF":{"name":"getParamDescrs()","abstract":"<p>Return the parameter description set for this solver object.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC20importModelConverter4fromyAC_tF":{"name":"importModelConverter(from:)","abstract":"<p>Ad-hoc method for importing model conversion from solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC9interruptyyF":{"name":"interrupt()","abstract":"<p>Solver local interrupt.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC4pushyyF":{"name":"push()","abstract":"<p>Create a backtracking point.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC3popyys6UInt32VF":{"name":"pop(_:)","abstract":"<p>Backtrack <code>n</code> backtracking points.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC5resetyyF":{"name":"reset()","abstract":"<p>Remove all assertions from the solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC12getNumScopess6UInt32VyF":{"name":"getNumScopes()","abstract":"<p>Return the number of backtracking points.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8getModelAA0bE0CSgyF":{"name":"getModel()","abstract":"<p>Retrieve the model for the last <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Solver.html#/s:7SwiftZ30B6SolverC5checkAA6StatusOyF\">check()</a></code> or <code>checkAssumptions()</code></p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC6assertyyAA0B3AstCySbGF":{"name":"assert(_:)","abstract":"<p>Assert a constraint into the solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC6assertyySayAA0B3AstCySbGGF":{"name":"assert(_:)","abstract":"<p>Assert a list of constraints into the solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC14assertAndTrackyyAA0B3AstCySbG_AGtF":{"name":"assertAndTrack(_:_:)","abstract":"<p>Assert a constraint <code>a</code> into the solver, and track it (in the unsat) core","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8fromFileyySSKF":{"name":"fromFile(_:)","abstract":"<p>Load solver assertions from a file.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC10fromStringyySSKF":{"name":"fromString(_:)","abstract":"<p>Load solver assertions from a string.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC13getAssertionsAA0B9AstVectorCyF":{"name":"getAssertions()","abstract":"<p>Return the set of asserted formulas on the solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8getUnitsAA0B9AstVectorCyF":{"name":"getUnits()","abstract":"<p>Return the set of units modulo model conversion.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8getTrailAA0B9AstVectorCyF":{"name":"getTrail()","abstract":"<p>Return the trail modulo model conversion, in order of decision level","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC11getNonUnitsAA0B9AstVectorCyF":{"name":"getNonUnits()","abstract":"<p>Return the set of non units in the solver state.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC9getLevels_5countSays6UInt32VGAA0B9AstVectorC_AGtF":{"name":"getLevels(_:count:)","abstract":"<p>retrieve the decision depth of Boolean literals (variables or their","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC5checkAA6StatusOyF":{"name":"check()","abstract":"<p>Check whether the assertions in a given solver are consistent or not.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC16checkAssumptionsyAA6StatusOSayAA03AnyB3AstCGF":{"name":"checkAssumptions(_:)","abstract":"<p>Check whether the assertions in the given solver and optional assumptions","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC15getConsequences11assumptions9variables12consequencesAA6StatusOSayAA0B3AstCySbGG_SayAA03AnybJ0CGAA0bJ6VectorCtF":{"name":"getConsequences(assumptions:variables:consequences:)","abstract":"<p>Retrieve consequences from solver that determine values of the supplied","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8getProofAA03AnyB3AstCSgyF":{"name":"getProof()","abstract":"<p>Retrieve the proof for the last <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Solver.html#/s:7SwiftZ30B6SolverC5checkAA6StatusOyF\">check()</a></code> or <code>checkAssumptions()</code></p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC12getUnsatCoreAA0B9AstVectorCyF":{"name":"getUnsatCore()","abstract":"<p>Retrieve the unsat core for the last <code>checkAssumptions()</code></p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC16getReasonUnknownSSyF":{"name":"getReasonUnknown()","abstract":"<p>Return a brief justification for an &ldquo;unknown&rdquo; result (i.e., <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Status.html#/s:7SwiftZ36StatusO7unknownyA2CmF\">Status.unknown</a></code>)","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC13getStatisticsAA0B5StatsCyF":{"name":"getStatistics()","abstract":"<p>Return statistics for the given solver.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert a solver into a string.</p>","parent_name":"Z3Solver"},"Classes/Z3Solver.html#/s:7SwiftZ30B6SolverC14toDimacsString12includeNamesSSSb_tF":{"name":"toDimacsString(includeNames:)","abstract":"<p>Convert a solver into a DIMACS formatted string.</p>","parent_name":"Z3Solver"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3ParserContext.html\">Z3ParserContext</a></code> belongs</p>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC5apply4overSdAA0B4GoalC_tF":{"name":"apply(over:)","abstract":"<p>Execute the probe over the goal. The probe always produce a double value.","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC16tacticForFailureAA0B6TacticCyF":{"name":"tacticForFailure()","abstract":"<p>Return a tactic that fails if this probe evaluates to false.</p>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC1loiyA2C_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>lhs</code>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC2leoiyA2C_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>lhs</code>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC1goiyA2C_ACtFZ":{"name":">(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>lhs</code>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC2geoiyA2C_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>lhs</code>","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC2eeoiyA2C_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>lhs</code> and <code>rhs</code> evaluate to","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC2oooiyA2C_ACtFZ":{"name":"||(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>lhs</code> or <code>rhs</code> evaluate to","parent_name":"Z3Probe"},"Classes/Z3Probe.html#/s:7SwiftZ30B5ProbeC1nopyA2CFZ":{"name":"!(_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>probe</code> does not evaluate","parent_name":"Z3Probe"},"Classes/Z3ParserContext.html#/s:7SwiftZ30B13ParserContextC7contextAA0bD0Cvp":{"name":"context","abstract":"<p>The context this <code>Z3ParserContext</code> belongs</p>","parent_name":"Z3ParserContext"},"Classes/Z3ParserContext.html#/s:7SwiftZ30B13ParserContextC7addSortyyAA0bF0CF":{"name":"addSort(_:)","abstract":"<p>Add a sort declaration.</p>","parent_name":"Z3ParserContext"},"Classes/Z3ParserContext.html#/s:7SwiftZ30B13ParserContextC7addDeclyyAA0b4FuncF0CF":{"name":"addDecl(_:)","abstract":"<p>Add a function declaration.</p>","parent_name":"Z3ParserContext"},"Classes/Z3ParserContext.html#/s:7SwiftZ30B13ParserContextC11parseStringyAA0B9AstVectorCSSF":{"name":"parseString(_:)","abstract":"<p>Parse a string of SMTLIB2 commands. Return assertions.</p>","parent_name":"Z3ParserContext"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Params</code> belongs</p>","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC7setBoolyyAA0B6SymbolC_SbtF":{"name":"setBool(_:_:)","abstract":"<p>Add a Boolean parameter <code>k</code> with value <code>v</code> to the parameter set <code>p</code>.</p>","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC7setUIntyyAA0B6SymbolC_s6UInt32VtF":{"name":"setUInt(_:_:)","abstract":"<p>Add an unsigned parameter <code>k</code> with value <code>v</code> to the parameter set <code>p</code>.</p>","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC9setDoubleyyAA0B6SymbolC_SdtF":{"name":"setDouble(_:_:)","abstract":"<p>Add a double parameter <code>k</code> with value <code>v</code> to the parameter set <code>p</code>.</p>","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC9setSymbolyyAA0bE0C_AFtF":{"name":"setSymbol(_:_:)","abstract":"<p>Add a symbol parameter <code>k</code> with value <code>v</code> to the parameter set <code>p</code>.</p>","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert a parameter set into a string. This function is mainly used for","parent_name":"Z3Params"},"Classes/Z3Params.html#/s:7SwiftZ30B6ParamsC8validateyyAA0B11ParamDescrsCF":{"name":"validate(_:)","abstract":"<p>Validate this parameter set against the parameter description set <code>d</code>.</p>","parent_name":"Z3Params"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3ParamDescrs</code> belongs</p>","parent_name":"Z3ParamDescrs"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC7getKindySo0B11_param_kindaAA0B6SymbolCF":{"name":"getKind(_:)","abstract":"<p>Return the kind associated with the given parameter name <code>n</code>.</p>","parent_name":"Z3ParamDescrs"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC7getSizes6UInt32VyF":{"name":"getSize()","abstract":"<p>Return the number of parameters in the given parameter description set.</p>","parent_name":"Z3ParamDescrs"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC7getNameyAA0B6SymbolCs6UInt32VF":{"name":"getName(_:)","abstract":"<p>Return the name of the parameter at given index <code>i</code>.</p>","parent_name":"Z3ParamDescrs"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC16getDocumentationySSAA0B6SymbolCF":{"name":"getDocumentation(_:)","abstract":"<p>Retrieve documentation string corresponding to parameter name <code>s</code>.</p>","parent_name":"Z3ParamDescrs"},"Classes/Z3ParamDescrs.html#/s:7SwiftZ30B11ParamDescrsC8toStringySSAA0B6SymbolCF":{"name":"toString(_:)","abstract":"<p>Convert a parameter description set into a string. This function is mainly","parent_name":"Z3ParamDescrs"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Optimize</code> belongs</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC6assertyyAA0B3AstCySbGF":{"name":"assert(_:)","abstract":"<p>Assert hard constraint to the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC6assertyySayAA0B3AstCySbGGF":{"name":"assert(_:)","abstract":"<p>Assert hard constraints to the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC14assertAndTrackyyAA0B3AstCySbG_AGtF":{"name":"assertAndTrack(_:_:)","abstract":"<p>Assert tracked hard constraint to the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC10assertSoft_6weight2ids6UInt32VAA0B3AstCySbG_SSAA0B6SymbolCSgtF":{"name":"assertSoft(_:weight:id:)","abstract":"<p>Assert soft constraint to the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8maximizeys6UInt32VAA0B3AstCyxGAA13BitVectorSortRzlF":{"name":"maximize(_:)","abstract":"<p>Add a maximization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8maximizeys6UInt32VAA0B3AstCyxGAA14ArithmeticSortRzlF":{"name":"maximize(_:)","abstract":"<p>Add a maximization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC11maximizeAnyys6UInt32VAA0eB3AstCF":{"name":"maximizeAny(_:)","abstract":"<p>Add a maximization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8minimizeys6UInt32VAA0B3AstCyxGAA13BitVectorSortRzlF":{"name":"minimize(_:)","abstract":"<p>Add a minimization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8minimizeys6UInt32VAA0B3AstCyxGAA14ArithmeticSortRzlF":{"name":"minimize(_:)","abstract":"<p>Add a minimization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC11minimizeAnyys6UInt32VAA0eB3AstCF":{"name":"minimizeAny(_:)","abstract":"<p>Add a minimization constraint.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC5checkyAA6StatusOSayAA03AnyB3AstCGF":{"name":"check(_:)","abstract":"<p>Check consistency and produce optimal values.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC16getReasonUnknownSSyF":{"name":"getReasonUnknown()","abstract":"<p>Retrieve a string that describes the last status returned by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC5checkyAA6StatusOSayAA03AnyB3AstCGF\">check(_:)</a></code>.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8getModelAA0bE0CyF":{"name":"getModel()","abstract":"<p>Retrieve the model for the last <code>check</code></p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC12getUnsatCoreAA0B9AstVectorCyF":{"name":"getUnsatCore()","abstract":"<p>Retrieve the unsat core for the last <code>check</code>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC9setParamsyyAA0bE0CF":{"name":"setParams(_:)","abstract":"<p>Set parameters on optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC14getParamDescrsAA0beF0CyF":{"name":"getParamDescrs()","abstract":"<p>Return the parameter description set for this optimize object.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8getLoweryAA03AnyB3AstCs6UInt32VF":{"name":"getLower(_:)","abstract":"<p>Retrieve lower bound value or approximation for the i&#39;th optimization","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8getUpperyAA03AnyB3AstCs6UInt32VF":{"name":"getUpper(_:)","abstract":"<p>Retrieve upper bound value or approximation for the i&#39;th optimization","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC16getLowerAsVectoryAA0b3AstG0Cs6UInt32VF":{"name":"getLowerAsVector(_:)","abstract":"<p>Retrieve lower bound value or approximation for the i&#39;th optimization","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC16getUpperAsVectoryAA0b3AstG0Cs6UInt32VF":{"name":"getUpperAsVector(_:)","abstract":"<p>Retrieve upper bound value or approximation for the i&#39;th optimization objective.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8toStringSSyF":{"name":"toString()","abstract":"<p>Print the current context as a string.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC10fromStringyySSKF":{"name":"fromString(_:)","abstract":"<p>Parse an SMT-LIB2 string with assertions, soft constraints and optimization","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC8fromFileyySSKF":{"name":"fromFile(_:)","abstract":"<p>Parse an SMT-LIB2 file with assertions, soft constraints and optimization","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC7getHelpSSyF":{"name":"getHelp()","abstract":"<p>Return a string containing a description of parameters accepted by optimize.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC13getStatisticsAA0B5StatsCyF":{"name":"getStatistics()","abstract":"<p>Retrieve statistics information from the last call to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC5checkyAA6StatusOSayAA03AnyB3AstCGF\">check(_:)</a></code></p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC13getAssertionsAA0B9AstVectorCyF":{"name":"getAssertions()","abstract":"<p>Return the set of asserted formulas on the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC13getObjectivesAA0B9AstVectorCyF":{"name":"getObjectives()","abstract":"<p>Return objectives on the optimization context.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC4pushyyF":{"name":"push()","abstract":"<p>Create a backtracking point.</p>","parent_name":"Z3Optimize"},"Classes/Z3Optimize.html#/s:7SwiftZ30B8OptimizeC3popyyF":{"name":"pop()","abstract":"<p>Backtrack one level.</p>","parent_name":"Z3Optimize"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Model</code> belongs</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC4eval_10completionAA0B3AstCyxGSgAH_SbtAA8SortKindRzlF":{"name":"eval(_:completion:)","abstract":"<p>Evaluate the AST node <code>t</code> in the given model.","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC7evalAny_10completionAA0eB3AstCSgAG_SbtF":{"name":"evalAny(_:completion:)","abstract":"<p>Evaluate the AST node <code>t</code> in the given model.","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC14getConstInterpyAA03AnyB3AstCSgAA0B8FuncDeclCF":{"name":"getConstInterp(_:)","abstract":"<p>Return the interpretation (i.e., assignment) of constant <code>a</code> in the","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC9hasInterpySbAA0B8FuncDeclCF":{"name":"hasInterp(_:)","abstract":"<p>Test if there exists an interpretation (i.e., assignment) for <code>a</code> in the","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert the given model into a string.</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC9doubleAnyySdAA0eB3AstCF":{"name":"doubleAny(_:)","abstract":"<p>Evaluates expression to a double, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC6doubleySdAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"double(_:)","abstract":"<p>Evaluates expression to a double, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC6doubleySdAA0B3AstCyxGAA14ArithmeticSortRzlF":{"name":"double(_:)","abstract":"<p>Evaluates expression to a double, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC6intAnyys5Int32VAA0eB3AstCF":{"name":"intAny(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC8int64Anyys5Int64VAA0eB3AstCF":{"name":"int64Any(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC3intys5Int32VAA0B3AstCyAA7IntSortVGF":{"name":"int(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC5int64ys5Int64VAA0B3AstCyAA7IntSortVGF":{"name":"int64(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC3intys5Int32VAA0B3AstCyAA14BitVectorOfIntVyAFGGF":{"name":"int(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Model.html#/s:7SwiftZ30B5ModelC5int64ys5Int64VAA0B3AstCyAA14BitVectorOfIntVyAFGGF":{"name":"int64(_:)","abstract":"<p>Evaluates expression to an integer, assuming it is a numeral already</p>","parent_name":"Z3Model"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Goal</code> belongs</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC5depths6UInt32Vvp":{"name":"depth","abstract":"<p>Return the depth of this goal. It tracks how many transformations were","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC14isInconsistentSbvp":{"name":"isInconsistent","abstract":"<p>Returns <code>true</code> if this goal contains the formula <code>false</code>.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Return the number of formulas in this goal.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalCyAA0B3AstCySbGs6UInt32Vcip":{"name":"subscript(_:)","abstract":"<p>Return a formula from this goal at a given index.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalCyAA0B3AstCySbGSicip":{"name":"subscript(_:)","abstract":"<p>Return a formula from this goal at a given index.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC15expressionCounts6UInt32Vvp":{"name":"expressionCount","abstract":"<p>Return the number of formulas, subformulas and terms in the given goal.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC12isDecidedSatSbvp":{"name":"isDecidedSat","abstract":"<p>Return <code>true</code> if the goal is empty, and it is precise or the product of","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC14isDecidedUnsatSbvp":{"name":"isDecidedUnsat","abstract":"<p>Return <code>true</code> if the goal contains false, and it is precise or the","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC6assertyyAA0B3AstCySbGF":{"name":"assert(_:)","abstract":"<p>Add a new formula <code>ast</code> to the given goal.","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC5resetyyF":{"name":"reset()","abstract":"<p>Erase all formulas from this goal.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC12convertModelyAA0bE0CAFSgF":{"name":"convertModel(_:)","abstract":"<p>Convert a model of the formulas of a goal to a model of an original goal.","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert this goal into a string.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC14toDimacsString12includeNamesSSSb_tF":{"name":"toDimacsString(includeNames:)","abstract":"<p>Convert this goal into a DIMACS formatted string.</p>","parent_name":"Z3Goal"},"Classes/Z3Goal.html#/s:7SwiftZ30B4GoalC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Copy this goal from the context source to the context <code>newContext</code> target.</p>","parent_name":"Z3Goal"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22currentFpaRoundingModeAA0B3AstCyAA0fG4SortVGvp":{"name":"currentFpaRoundingMode","abstract":"<p>Gets or sets a reference to a rounding mode for floating-point operations","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9errorCodeSo0b1_D5_codeavp":{"name":"errorCode","abstract":"<p>Return the error code for the last API call.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8hasErrorSbvp":{"name":"hasError","abstract":"<p>Return <code>true</code> if the last API call resulted in an error.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10probeCounts6UInt32Vvp":{"name":"probeCount","abstract":"<p>Return the number of builtin probes available in Z3.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11tacticCounts6UInt32Vvp":{"name":"tacticCount","abstract":"<p>Return the number of builtin tactics available in Z3.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13configurationAcA0B6ConfigCSg_tcfc":{"name":"init(configuration:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12errorMessageySSSo0b1_D5_codeaF":{"name":"errorMessage(_:)","abstract":"<p>Return a string describing the given error code.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9interruptyyF":{"name":"interrupt()","abstract":"<p>Interrupt the execution of a Z3 procedure.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeParamsAA0bE0CyF":{"name":"makeParams()","abstract":"<p>Create a Z3 (empty) parameter set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeOptimizeAA0bE0CyF":{"name":"makeOptimize()","abstract":"<p>Create a new optimize context.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15getSimplifyHelpSSyF":{"name":"getSimplifyHelp()","abstract":"<p>Return a string describing all available parameters.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22getSimplifyParamDescrsAA0bfG0CyF":{"name":"getSimplifyParamDescrs()","abstract":"<p>Return the parameter description set for the simplify procedure.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8simplifyyAA03AnyB3AstCAFF":{"name":"simplify(_:)","abstract":"<p>Interface to simplifier.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10simplifyExyAA03AnyB3AstCAF_AA0B6ParamsCtF":{"name":"simplifyEx(_:_:)","abstract":"<p>Interface to simplifier.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15setAstPrintModeyySo0B15_ast_print_modeaF":{"name":"setAstPrintMode(_:)","abstract":"<p>Select mode for the format used for pretty-printing AST nodes.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC23benchmarkToSmtlibString4name5logic6status10attributes11assumptions7formulaS2SSg_S3SSayAA0B7AstBaseCGAMtF":{"name":"benchmarkToSmtlibString(name:logic:status:attributes:assumptions:formula:)","abstract":"<p>Convert the given benchmark into SMT-LIB formatted string.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13getSymbolKindySo0B12_symbol_kindaAA0bE0CF":{"name":"getSymbolKind(_:)","abstract":"<p>Return <code>Z3_INT_SYMBOL</code> if the symbol was constructed using <code>makeIntSymbol</code>,","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12getSymbolIntys5Int32VAA0bE0CF":{"name":"getSymbolInt(_:)","abstract":"<p>Return the symbol int value.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15getSymbolStringySSAA0bE0CF":{"name":"getSymbolString(_:)","abstract":"<p>Return the symbol name.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11getSortNameyAA0B6SymbolCAA0bE0CF":{"name":"getSortName(_:)","abstract":"<p>Return the sort name as a symbol.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11getSortKindySo0B10_sort_kindaAA0bE0CF":{"name":"getSortKind(_:)","abstract":"<p>Return the sort kind (e.g., array, tuple, int, bool, etc).</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13getBvSortSizeys6UInt32VAA0bF0CF":{"name":"getBvSortSize(_:)","abstract":"<p>Return the size of the given bit-vector sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16algebraicIsValueySbAA0B7AstBaseCF":{"name":"algebraicIsValue(_:)","abstract":"<p>Returns <code>true</code> if <code>ast</code> can be used as value in the Z3 real algebraic","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14algebraicIsPosySbAA0B9AlgebraicCF":{"name":"algebraicIsPos(_:)","abstract":"<p>Returns <code>true</code> if <code>ast</code> is positive, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14algebraicIsNegySbAA0B9AlgebraicCF":{"name":"algebraicIsNeg(_:)","abstract":"<p>Returns <code>true</code> if <code>ast</code> is negative, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15algebraicIsZeroySbAA0B9AlgebraicCF":{"name":"algebraicIsZero(_:)","abstract":"<p>Returns <code>true</code> if <code>ast</code> is zero, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13algebraicSignySiAA0B9AlgebraicCF":{"name":"algebraicSign(_:)","abstract":"<p>Returns <code>1</code> if <code>ast</code> is positive, <code>0</code> if <code>ast</code> is zero, and <code>-1</code> if it","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12algebraicAddyAA0B9AlgebraicCAF_AFtF":{"name":"algebraicAdd(_:_:)","abstract":"<p>Return the value lhs + rhs.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12algebraicSubyAA0B9AlgebraicCAF_AFtF":{"name":"algebraicSub(_:_:)","abstract":"<p>Return the value lhs - rhs.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12algebraicMulyAA0B9AlgebraicCAF_AFtF":{"name":"algebraicMul(_:_:)","abstract":"<p>Return the value lhs * rhs.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12algebraicDivyAA0B9AlgebraicCAF_AFtF":{"name":"algebraicDiv(_:_:)","abstract":"<p>Return the value lhs / rhs.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13algebraicRootyAA0B9AlgebraicCAF_s6UInt32VtF":{"name":"algebraicRoot(_:_:)","abstract":"<p>Return the ast^(1/k)</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14algebraicPoweryAA0B9AlgebraicCAF_s6UInt32VtF":{"name":"algebraicPower(_:_:)","abstract":"<p>Return the ast^k</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11algebraicLtySbAA0B9AlgebraicC_AFtF":{"name":"algebraicLt(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &lt; rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11algebraicGtySbAA0B9AlgebraicC_AFtF":{"name":"algebraicGt(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &gt; rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11algebraicLeySbAA0B9AlgebraicC_AFtF":{"name":"algebraicLe(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &lt;= rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11algebraicGeySbAA0B9AlgebraicC_AFtF":{"name":"algebraicGe(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &gt;= rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11algebraicEqySbAA0B9AlgebraicC_AFtF":{"name":"algebraicEq(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs == rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12algebraicNeqySbAA0B9AlgebraicC_AFtF":{"name":"algebraicNeq(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs != rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14algebraicRootsyAA0B9AstVectorCAA0B9AlgebraicC_SayAHGtF":{"name":"algebraicRoots(_:_:)","abstract":"<p>Given a multivariate polynomial <code>polynomial(x_0, ..., x_{n-1}, x_n)</code>, returns the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13algebraicEvalySiAA0B9AlgebraicC_SayAFGtF":{"name":"algebraicEval(_:_:)","abstract":"<p>Given a multivariate polynomial <code>polynomial(x_0, ..., x_{n-1})</code>, return","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16algebraicGetPolyyAA0B9AstVectorCAA0B9AlgebraicCF":{"name":"algebraicGetPoly(_:)","abstract":"<p>Return the coefficients of the defining polynomial.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13algebraicGetIys6UInt32VAA0B9AlgebraicCF":{"name":"algebraicGetI(_:)","abstract":"<p>Return which root of the polynomial the algebraic number represents.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeAddyAA0B3AstCyxGSayAGGAA14ArithmeticSortRzlF":{"name":"makeAdd(_:)","abstract":"<p>Create an AST node representing <code>args[0] + ... + args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeMulyAA0B3AstCyxGSayAGGAA14ArithmeticSortRzlF":{"name":"makeMul(_:)","abstract":"<p>Create an AST node representing <code>args[0] * ... * args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeSubyAA0B3AstCyxGSayAGGAA14ArithmeticSortRzlF":{"name":"makeSub(_:)","abstract":"<p>Create an AST node representing <code>args[0] + ... + args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeUnaryMinusyAA0B3AstCyxGAgA14ArithmeticSortRzlF":{"name":"makeUnaryMinus(_:)","abstract":"<p>Create an AST node representing <code>- arg</code>.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeDivyAA0B3AstCyxGAG_AGtAA14ArithmeticSortRzlF":{"name":"makeDiv(_:_:)","abstract":"<p>Create an AST node representing <code>arg1 div arg2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeModyAA0B3AstCyAA7IntSortVGAI_AItF":{"name":"makeMod(_:_:)","abstract":"<p>Create an AST node representing <code>arg1 mod arg2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeRemyAA0B3AstCyAA7IntSortVGAI_AItF":{"name":"makeRem(_:_:)","abstract":"<p>Create an AST node representing <code>arg1 rem arg2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makePoweryAA0B3AstCyxGAG_AGtAA14ArithmeticSortRzlF":{"name":"makePower(_:_:)","abstract":"<p>Create an AST node representing <code>arg1 ^ arg2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeLessThanyAA0B3AstCySbGAFyxG_AHtAA14ArithmeticSortRzlF":{"name":"makeLessThan(_:_:)","abstract":"<p>Create less than.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC21makeLessThanOrEqualToyAA0B3AstCySbGAFyxG_AHtAA14ArithmeticSortRzlF":{"name":"makeLessThanOrEqualTo(_:_:)","abstract":"<p>Create less than or equal to.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeGreaterThanyAA0B3AstCySbGAFyxG_AHtAA14ArithmeticSortRzlF":{"name":"makeGreaterThan(_:_:)","abstract":"<p>Create greater than.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC24makeGreaterThanOrEqualToyAA0B3AstCySbGAFyxG_AHtAA14ArithmeticSortRzlF":{"name":"makeGreaterThanOrEqualTo(_:_:)","abstract":"<p>Create greater than or equal to.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeDividesyAA0B3AstCySbGAFyAA7IntSortVG_AJtF":{"name":"makeDivides(_:_:)","abstract":"<p>Create division predicate.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeIntToRealyAA0B3AstCyAA0G4SortVGAFyAA0eI0VGF":{"name":"makeIntToReal(_:)","abstract":"<p>Coerce an integer to a real.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeRealToIntyAA0B3AstCyAA0G4SortVGAFyAA0eI0VGF":{"name":"makeRealToInt(_:)","abstract":"<p>Coerce a real to an integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeIntToFloat_4sortAA0B3AstCyxGAGyAA0E4SortVG_xmtAA08FloatingJ0RzlF":{"name":"makeIntToFloat(_:sort:)","abstract":"<p>Coerce an integer to a float.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeIntToFloat_4sortAA03AnyB3AstCAA0bJ0CyAA0E4SortVG_AA0bK0CtF":{"name":"makeIntToFloat(_:sort:)","abstract":"<p>Coerce an integer to a float.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeIsIntyAA0B3AstCySbGAFyAA8RealSortVGF":{"name":"makeIsInt(_:)","abstract":"<p>Check if a real number is an integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSelectyAA0B3AstCyq_GAFyAA9ArraySortVyxq_GG_AFyxGtAA0H4KindRzAaMR_r0_lF":{"name":"makeSelect(_:_:)","abstract":"<p>Array read.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSelectAnyyAA0fB3AstCAF_AFtF":{"name":"makeSelectAny(_:_:)","abstract":"<p>Array read.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeSelectNyAA03AnyB3AstCAA0bG0CyAA9ArraySortVyxq_GG_SayAHyxGGtAA0I4KindRzAaOR_r0_lF":{"name":"makeSelectN(_:_:)","abstract":"<p>n-ary Array read.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSelectNAnyyAA03AnyB3AstCAF_SayAFGtF":{"name":"makeSelectNAny(_:_:)","abstract":"<p>n-ary Array read.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeStoreyAA0B3AstCyAA9ArraySortVyxq_GGAJ_AFyxGAFyq_GtAA0H4KindRzAaMR_r0_lF":{"name":"makeStore(_:_:_:)","abstract":"<p>Array update.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeStoreAnyyAA0fB3AstCAF_A2FtF":{"name":"makeStoreAny(_:_:_:)","abstract":"<p>Array update.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeStoreNyAA0B3AstCyAA9ArraySortVyxq_GGAJ_SayAFyxGGAFyq_GtAA0H4KindRzAaNR_r0_lF":{"name":"makeStoreN(_:_:_:)","abstract":"<p>n-ary Array update.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeStoreNAnyyAA03AnyB3AstCAF_SayAFGAFtF":{"name":"makeStoreNAny(_:_:_:)","abstract":"<p>n-ary Array update.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeConstArrayyAA0B3AstCyAA0F4SortVyxq_GGAFyq_GAA0H4KindRzAaLR_r0_lF":{"name":"makeConstArray(_:)","abstract":"<p>Create the constant array.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeConstArrayAnyyAA0gB3AstCAA0B4SortC_AFtF":{"name":"makeConstArrayAny(_:_:)","abstract":"<p>Create the constant array.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeMap_4argsAA03AnyB3AstCAA0B8FuncDeclC_SayAGGtF":{"name":"makeMap(_:args:)","abstract":"<p>Map f on the argument arrays.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeArrayDefaultyAA0B3AstCyq_GAFyAA0E4SortVyxq_GGAA0H4KindRzAaLR_r0_lF":{"name":"makeArrayDefault(_:)","abstract":"<p>Access the array default value.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeArrayDefaultAnyyAA0gB3AstCAFF":{"name":"makeArrayDefaultAny(_:)","abstract":"<p>Access the array default value.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeAsArrayyAA03AnyB3AstCAA0B8FuncDeclCF":{"name":"makeAsArray(_:)","abstract":"<p>Create array with the same interpretation as a function.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSetHasSizeyAA0B3AstCySbGAFyAA9ArraySortVyxSbGG_AA03AnybH0CtAA0J4KindRzlF":{"name":"makeSetHasSize(_:_:)","abstract":"<p>Create predicate that holds if Boolean array <code>set</code> has <code>k</code> elements set","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeBitVectoryAA0B3AstCyxGs5Int32VAA0eF4SortRzlF":{"name":"makeBitVector(_:)","abstract":"<p>Creates a bit vector out of a given integer value.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeBitVectorAny_8bitWidthAA0gB3AstCs5Int32V_s6UInt32VtF":{"name":"makeBitVectorAny(_:bitWidth:)","abstract":"<p>Creates a bit vector out of a given integer value.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvNotyAA0B3AstCyxGAgA13BitVectorSortRzlF":{"name":"makeBvNot(_:)","abstract":"<p>Bitwise negation.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeBvRedAndyAA0B3AstCyAA14BitVectorSort1VGAFyxGAA0iJ4SortRzlF":{"name":"makeBvRedAnd(_:)","abstract":"<p>Take conjunction of bits in vector, return vector of length 1.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeBvRedOryAA0B3AstCyAA14BitVectorSort1VGAFyxGAA0iJ4SortRzlF":{"name":"makeBvRedOr(_:)","abstract":"<p>Take disjunction of bits in vector, return vector of length 1.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvAndyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvAnd(_:_:)","abstract":"<p>Bitwise and.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8makeBvOryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvOr(_:_:)","abstract":"<p>Bitwise or.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvXoryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvXor(_:_:)","abstract":"<p>Bitwise exclusive-or.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvNandyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvNand(_:_:)","abstract":"<p>Bitwise nand.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvNoryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvNor(_:_:)","abstract":"<p>Bitwise nor.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvXnoryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvXnor(_:_:)","abstract":"<p>Bitwise xnor.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvNegyAA0B3AstCyxGAgA13BitVectorSortRzlF":{"name":"makeBvNeg(_:)","abstract":"<p>Standard two&rsquo;s complement unary minus.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvAddyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvAdd(_:_:)","abstract":"<p>Standard two&rsquo;s complement addition.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvSubyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvSub(_:_:)","abstract":"<p>Standard two&rsquo;s complement subtraction.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvMulyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvMul(_:_:)","abstract":"<p>Standard two&rsquo;s complement multiplication.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvDivyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvDiv(_:_:)","abstract":"<p>Unsigned division.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvSDivyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvSDiv(_:_:)","abstract":"<p>Two&rsquo;s complement signed division.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvURemyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvURem(_:_:)","abstract":"<p>Unsigned remainder.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvSRemyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvSRem(_:_:)","abstract":"<p>Two&rsquo;s complement signed remainder (sign follows dividend).</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvSModyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvSMod(_:_:)","abstract":"<p>Two&rsquo;s complement signed remainder (sign follows divisor).</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvUltyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvUlt(_:_:)","abstract":"<p>Unsigned less than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvSltyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSlt(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvUleyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvUle(_:_:)","abstract":"<p>Unsigned less than or equal to.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvSleyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSle(_:_:)","abstract":"<p>Two&rsquo;s complement signed less than or equal to.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvUgeyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvUge(_:_:)","abstract":"<p>Unsigned greater than or equal to.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvSgeyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSge(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than or equal to.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvUgtyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvUgt(_:_:)","abstract":"<p>Unsigned greater than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvSgtyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSgt(_:_:)","abstract":"<p>Two&rsquo;s complement signed greater than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeConcatyAA0B3AstCyAA16AnyBitVectorSortVGAFyxG_AFyq_GtAA0hiJ0RzAaLR_r0_lF":{"name":"makeConcat(_:_:)","abstract":"<p>Concatenate the given bit-vectors.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeExtract4high3low_AA0B3AstCyAA16AnyBitVectorSortVGs6UInt32V_AmHyxGtAA0jkL0RzlF":{"name":"makeExtract(high:low:_:)","abstract":"<p>Extract the bits <code>high</code> down to <code>low</code> from a bit-vector of","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSignExtendyAA0B3AstCyAA16AnyBitVectorSortVGs6UInt32V_AFyxGtAA0ijK0RzlF":{"name":"makeSignExtend(_:_:)","abstract":"<p>Sign-extend of the given bit-vector to the (signed) equivalent bit-vector","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeZeroExtendyAA0B3AstCyAA16AnyBitVectorSortVGs6UInt32V_AFyxGtAA0ijK0RzlF":{"name":"makeZeroExtend(_:_:)","abstract":"<p>Extend the given bit-vector with zeros to the (unsigned) equivalent","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeRepeatyAA0B3AstCyAA16AnyBitVectorSortVGs6UInt32V_AFyxGtAA0hiJ0RzlF":{"name":"makeRepeat(_:_:)","abstract":"<p>Repeat the given bit-vector up length <code>i</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBvShlyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvShl(_:_:)","abstract":"<p>Shift left.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvLShryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvLShr(_:_:)","abstract":"<p>Logical shift right.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeBvAShryAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeBvAShr(_:_:)","abstract":"<p>Arithmetic shift right.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeRotateLeftyAA0B3AstCyxGs6UInt32V_AGtAA13BitVectorSortRzlF":{"name":"makeRotateLeft(_:_:)","abstract":"<p>Rotate bits of <code>t1</code> to the left <code>i</code> times.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeRotateRightyAA0B3AstCyxGs6UInt32V_AGtAA13BitVectorSortRzlF":{"name":"makeRotateRight(_:_:)","abstract":"<p>Rotate bits of <code>t1</code> to the right <code>i</code> times.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeExtRotateLeftyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeExtRotateLeft(_:_:)","abstract":"<p>Rotate bits of <code>t1</code> to the left <code>t2</code> times.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeExtRotateRightyAA0B3AstCyxGAG_AGtAA13BitVectorSortRzlF":{"name":"makeExtRotateRight(_:_:)","abstract":"<p>Rotate bits of <code>t1</code> to the right <code>t2</code> times.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeIntToBvyAA0B3AstCyAA16AnyBitVectorSortVGs6UInt32V_AFyAA0eL0VGtF":{"name":"makeIntToBv(_:_:)","abstract":"<p>Create an <code>n</code> bit bit-vector from the integer argument <code>t1</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeBvToInt_8isSignedAA0B3AstCyAA0G4SortVGAGyxG_SbtAA09BitVectorK0RzlF":{"name":"makeBvToInt(_:isSigned:)","abstract":"<p>Create an integer from the bit-vector argument <code>t1</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeBvToIntAny_8isSignedAA0B3AstCyAA0G4SortVGAGyAA0h9BitVectorL0VG_SbtF":{"name":"makeBvToIntAny(_:isSigned:)","abstract":"<p>Create an integer from the bit-vector argument <code>t1</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeBvAddNoOverflow__8isSignedAA0B3AstCySbGAGyxG_AISbtAA13BitVectorSortRzlF":{"name":"makeBvAddNoOverflow(_:_:isSigned:)","abstract":"<p>Create a predicate that checks that the bit-wise addition of <code>t1</code> and","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeBvAddNoUnderflow__8isSignedAA0B3AstCySbGAGyxG_AISbtAA13BitVectorSortRzlF":{"name":"makeBvAddNoUnderflow(_:_:isSigned:)","abstract":"<p>Create a predicate that checks that the bit-wise addition of <code>t1</code> and","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeBvSubNoOverflowyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSubNoOverflow(_:_:)","abstract":"<p>Create a predicate that checks that the bit-wise subtraction of <code>t1</code> and","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeBvSubNoUnderflow__8isSignedAA0B3AstCySbGAGyxG_AISbtAA13BitVectorSortRzlF":{"name":"makeBvSubNoUnderflow(_:_:isSigned:)","abstract":"<p>Create a predicate that checks that the bit-wise subtraction of <code>t1</code> and","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeBvSDivNoOverflowyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvSDivNoOverflow(_:_:)","abstract":"<p>Create a predicate that checks that the bit-wise signed division of <code>t1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeBvNegNoOverflowyAA0B3AstCySbGAFyxGAA13BitVectorSortRzlF":{"name":"makeBvNegNoOverflow(_:)","abstract":"<p>Check that bit-wise negation does not overflow when <code>t1</code> is interpreted","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeBvMulNoOverflow__8isSignedAA0B3AstCySbGAGyxG_AISbtAA13BitVectorSortRzlF":{"name":"makeBvMulNoOverflow(_:_:isSigned:)","abstract":"<p>Create a predicate that checks that the bit-wise multiplication of <code>t1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeBvMulNoUnderflowyAA0B3AstCySbGAFyxG_AHtAA13BitVectorSortRzlF":{"name":"makeBvMulNoUnderflow(_:_:)","abstract":"<p>Create a predicate that checks that the bit-wise multiplication of <code>t1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeBvNumeralyAA03AnyB3AstCSaySbGF":{"name":"makeBvNumeral(_:)","abstract":"<p>Create a bit-vector numeral from a vector of Booleans.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeFuncDecl4name6domain5rangeAA0beF0CAA0B6SymbolC_SayAA0B4SortCGAMtF":{"name":"makeFuncDecl(name:domain:range:)","abstract":"<p>Declare a constant or function.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeApply_4argsAA03AnyB3AstCAA0B8FuncDeclC_SayAGGtF":{"name":"makeApply(_:args:)","abstract":"<p>Create a constant or function application.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeConstant4name4sortAA03AnyB3AstCSS_AA0B4SortCtF":{"name":"makeConstant(name:sort:)","abstract":"<p>Declare and create a constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeConstant4name4sortAA03AnyB3AstCAA0B6SymbolC_AA0B4SortCtF":{"name":"makeConstant(name:sort:)","abstract":"<p>Declare and create a constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeConstant4name4sortAA0B3AstCyxGSS_xmtAA8SortKindRzlF":{"name":"makeConstant(name:sort:)","abstract":"<p>Declare and create a constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeConstant4name4sortAA0B3AstCyxGAA0B6SymbolC_xmtAA8SortKindRzlF":{"name":"makeConstant(name:sort:)","abstract":"<p>Declare and create a constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFreshFuncDecl6prefix6domain5rangeAA0bfG0CSSSg_SayAA0B4SortCGALtF":{"name":"makeFreshFuncDecl(prefix:domain:range:)","abstract":"<p>Declare a fresh constant or function.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFreshConstant6prefix4sortAA03AnyB3AstCSSSg_AA0B4SortCtF":{"name":"makeFreshConstant(prefix:sort:)","abstract":"<p>Declare and create a fresh constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeRecFuncDecl4name6domain5rangeAA0bfG0CAA0B6SymbolC_SayAA0B4SortCGAMtF":{"name":"makeRecFuncDecl(name:domain:range:)","abstract":"<p>Declare a recursive function</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9addRecDef_4args4bodyyAA0B8FuncDeclC_SayAA03AnyB3AstCGAJtF":{"name":"addRecDef(_:args:body:)","abstract":"<p>Define the body of a recursive function.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC23makeFpaRoundingModeSortAA0bH0CyF":{"name":"makeFpaRoundingModeSort()","abstract":"<p>Create the <code>RoundingMode</code> sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC29makeFpaRoundNearestTiesToEvenAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRoundNearestTiesToEven()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaRNEAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRNE()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC29makeFpaRoundNearestTiesToAwayAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRoundNearestTiesToAway()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaRNAAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRNA()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC26makeFpaRoundTowardPositiveAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRoundTowardPositive()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardPositive","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaRTPAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRTP()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardPositive","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC26makeFpaRoundTowardNegativeAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRoundTowardNegative()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardNegative","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaRTNAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRTN()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardNegative","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22makeFpaRoundTowardZeroAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRoundTowardZero()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardZero","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaRTZAA0B3AstCyAA16RoundingModeSortVGyF":{"name":"makeFpaRTZ()","abstract":"<p>Create a numeral of <code>RoundingMode</code> sort which represents the TowardZero","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17floatingPointSort5ebits5sbitsAA0bF0Cs6UInt32V_AJtF":{"name":"floatingPointSort(ebits:sbits:)","abstract":"<p>Create a FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19floatingPoint16SortAA0bF0CyF":{"name":"floatingPoint16Sort()","abstract":"<p>Create the half-precision (16-bit) FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19floatingPoint32SortAA0bF0CyF":{"name":"floatingPoint32Sort()","abstract":"<p>Create the single-precision (32-bit) FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19floatingPoint64SortAA0bF0CyF":{"name":"floatingPoint64Sort()","abstract":"<p>Create the double-precision (64-bit) FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20floatingPoint128SortAA0bF0CyF":{"name":"floatingPoint128Sort()","abstract":"<p>Create the quadruple-precision (128-bit) FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaNan4sortAA0B3AstCyAA9AnyFPSortVGAA0B4SortC_tF":{"name":"makeFpaNan(sort:)","abstract":"<p>Create a floating-point NaN of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaNan4sortAA0B3AstCyxGxm_tAA12FloatingSortRzlF":{"name":"makeFpaNan(sort:)","abstract":"<p>Create a floating-point NaN of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaInfinite4sort8negativeAA0B3AstCyAA9AnyFPSortVGAA0B4SortC_SbtF":{"name":"makeFpaInfinite(sort:negative:)","abstract":"<p>Create a floating-point infinity of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaInfinite4sort8negativeAA0B3AstCyxGxm_SbtAA12FloatingSortRzlF":{"name":"makeFpaInfinite(sort:negative:)","abstract":"<p>Create a floating-point infinity of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeFpaZero4sort8negativeAA0B3AstCyAA9AnyFPSortVGAA0B4SortC_SbtF":{"name":"makeFpaZero(sort:negative:)","abstract":"<p>Create a floating-point zero of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeFpaZero4sort8negativeAA0B3AstCyxGxm_SbtAA12FloatingSortRzlF":{"name":"makeFpaZero(sort:negative:)","abstract":"<p>Create a floating-point zero of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFpaFp3sgn3exp3sigAA0B3AstCyAA9AnyFPSortVGAIyxG_AIyq_GAIyq0_GtAA13BitVectorSortRzAaPR_AaPR0_r1_lF":{"name":"makeFpaFp(sgn:exp:sig:)","abstract":"<p>Create an expression of FloatingPoint sort from three bit-vector expressions.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeFpaFpAny3sgn3exp3sigAA0B3AstCyAA0G6FPSortVGAA0gbK0C_A2NtF":{"name":"makeFpaFpAny(sgn:exp:sig:)","abstract":"<p>Create an expression of FloatingPoint sort from three bit-vector expressions.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeFpaNumeralFloat_4sortAA0B3AstCyAA9AnyFPSortVGSf_AA0B4SortCtF":{"name":"makeFpaNumeralFloat(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a float.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeFpaNumeralFloat_4sortAA0B3AstCyxGSf_xmtAA12FloatingSortRzlF":{"name":"makeFpaNumeralFloat(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a float.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeFpaNumeralDouble_4sortAA0B3AstCyAA9AnyFPSortVGSd_AA0B4SortCtF":{"name":"makeFpaNumeralDouble(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a double.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeFpaNumeralDouble_4sortAA0B3AstCyxGSd_xmtAA12FloatingSortRzlF":{"name":"makeFpaNumeralDouble(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a double.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeFpaNumeralyAA0B3AstCyxGxSBRzs25LosslessStringConvertibleRzAA12FloatingSortRzlF":{"name":"makeFpaNumeral(_:)","abstract":"<p>Create a numeral of FloatingPoint sort from a floating point value.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFloatyAA0B3AstCyxGxSBRzs25LosslessStringConvertibleRzAA12FloatingSortRzlF":{"name":"makeFloat(_:)","abstract":"<p>Create a numeral of FloatingPoint sort from a floating point value.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaNumeralInt_4sortAA0B3AstCyAA9AnyFPSortVGs5Int32V_AA0B4SortCtF":{"name":"makeFpaNumeralInt(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a signed integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaNumeralInt_4sortAA0B3AstCyxGs5Int32V_xmtAA12FloatingSortRzlF":{"name":"makeFpaNumeralInt(_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a signed integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeFpaNumeralUInt___4sortAA0B3AstCyAA9AnyFPSortVGSb_s5Int32Vs6UInt32VAA0B4SortCtF":{"name":"makeFpaNumeralUInt(_:_:_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a sign bit and two integers.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeFpaNumeralUInt___4sortAA0B3AstCyxGSb_s5Int32Vs6UInt32VxmtAA12FloatingSortRzlF":{"name":"makeFpaNumeralUInt(_:_:_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a sign bit and two integers.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeFpaNumeralUInt___4sortAA0B3AstCyxGSb_s5Int64Vs6UInt64VxmtAA12FloatingSortRzlF":{"name":"makeFpaNumeralUInt(_:_:_:sort:)","abstract":"<p>Create a numeral of FloatingPoint sort from a sign bit and two 64-bit","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaAbsyAA0B3AstCyxGAgA12FloatingSortRzlF":{"name":"makeFpaAbs(_:)","abstract":"<p>Floating-point absolute value</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaNegyAA0B3AstCyxGAgA12FloatingSortRzlF":{"name":"makeFpaNeg(_:)","abstract":"<p>Floating-point negation</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaAddyAA0B3AstCyxGAFyAA16RoundingModeSortVG_A2GtAA08FloatingJ0RzlF":{"name":"makeFpaAdd(_:_:_:)","abstract":"<p>Floating-point addition</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaSubtractyAA0B3AstCyxGAFyAA16RoundingModeSortVG_A2GtAA08FloatingJ0RzlF":{"name":"makeFpaSubtract(_:_:_:)","abstract":"<p>Floating-point subtraction</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaMultiplyyAA0B3AstCyxGAFyAA16RoundingModeSortVG_A2GtAA08FloatingJ0RzlF":{"name":"makeFpaMultiply(_:_:_:)","abstract":"<p>Floating-point multiplication</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaDivideyAA0B3AstCyxGAFyAA16RoundingModeSortVG_A2GtAA08FloatingJ0RzlF":{"name":"makeFpaDivide(_:_:_:)","abstract":"<p>Floating-point division</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaDivideyAA0B3AstCyxGAFyAA16RoundingModeSortVG_A3GtAA08FloatingJ0RzlF":{"name":"makeFpaDivide(_:_:_:_:)","abstract":"<p>Floating-point fused multiply-add.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaSquareRootyAA0B3AstCyxGAFyAA16RoundingModeSortVG_AGtAA08FloatingK0RzlF":{"name":"makeFpaSquareRoot(_:_:)","abstract":"<p>Floating-point square root</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeFpaRemainderyAA0B3AstCyxGAG_AGtAA12FloatingSortRzlF":{"name":"makeFpaRemainder(_:_:)","abstract":"<p>Floating-point remainder</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22makeFpaRoundToIntegralyAA0B3AstCyxGAFyAA16RoundingModeSortVG_AGtAA08FloatingL0RzlF":{"name":"makeFpaRoundToIntegral(_:_:)","abstract":"<p>Floating-point roundToIntegral. Rounds a floating-point number to","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaMinyAA0B3AstCyxGAG_AGtAA12FloatingSortRzlF":{"name":"makeFpaMin(_:_:)","abstract":"<p>Minimum of floating-point numbers.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaMaxyAA0B3AstCyxGAG_AGtAA12FloatingSortRzlF":{"name":"makeFpaMax(_:_:)","abstract":"<p>Maximum of floating-point numbers.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaLeqyAA0B3AstCySbGAFyxG_AHtAA12FloatingSortRzlF":{"name":"makeFpaLeq(_:_:)","abstract":"<p>Floating-point less than or equal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFpaLtyAA0B3AstCySbGAFyxG_AHtAA12FloatingSortRzlF":{"name":"makeFpaLt(_:_:)","abstract":"<p>Floating-point less than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeFpaGeqyAA0B3AstCySbGAFyxG_AHtAA12FloatingSortRzlF":{"name":"makeFpaGeq(_:_:)","abstract":"<p>Floating-point greater than or equal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFpaGtyAA0B3AstCySbGAFyxG_AHtAA12FloatingSortRzlF":{"name":"makeFpaGt(_:_:)","abstract":"<p>Floating-point greater than.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFpaEqyAA0B3AstCySbGAFyxG_AHtAA12FloatingSortRzlF":{"name":"makeFpaEq(_:_:)","abstract":"<p>Floating-point equality.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaIsNormalyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsNormal(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a normal floating-point number.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeFpaIsSubnormalyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsSubnormal(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a subnormal floating-point number.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaIsZeroyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsZero(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a floating-point number with zero","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaIsInfiniteyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsInfinite(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a floating-point number representing","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeFpaIsNanyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsNan(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a NaN.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaIsNegativeyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsNegative(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a negative floating-point number.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeFpaIsPositiveyAA0B3AstCySbGAFyxGAA12FloatingSortRzlF":{"name":"makeFpaIsPositive(_:)","abstract":"<p>Predicate indicating whether <code>t</code> is a positive floating-point number.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaToFPBv_4sortAA0B3AstCyq_GAGyxG_q_mtAA13BitVectorSortRzAA08FloatingL0R_r0_lF":{"name":"makeFpaToFPBv(_:sort:)","abstract":"<p>Conversion of a single IEEE 754-2008 bit-vector into a floating-point","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaToIEEEBvyAA0B3AstCyAA16AnyBitVectorSortVGAFyxGAA08FloatingL0RzlF":{"name":"makeFpaToIEEEBv(_:)","abstract":"<p>Conversion of a floating-point term into a bit-vector term in IEEE","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeFpaToIEEEBvAnyyAA0B3AstCyAA0H13BitVectorSortVGAA0hbI0CF":{"name":"makeFpaToIEEEBvAny(_:)","abstract":"<p>Conversion of a floating-point term into a bit-vector term in IEEE","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeBitVectorToFloat_4sortAA0B3AstCyq_GAGyxG_q_mtAA0eF4SortRzAA08FloatingK0R_r0_lF":{"name":"makeBitVectorToFloat(_:sort:)","abstract":"<p>Alias for <code>makeFpaToFPBv</code></p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeFpaToBvAny___6signedAA0B3AstCyAA0H13BitVectorSortVGAA0hbJ0C_ALs6UInt32VSbtF":{"name":"makeFpaToBvAny(_:_:_:signed:)","abstract":"<p>Produces a term that represents the conversion of the floating-point term","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeFpaToBv___6signedAA0B3AstCyxGAGyAA16RoundingModeSortVG_AGyq_GxmSbtAA09BitVectorL0RzAA08FloatingL0R_r0_lF":{"name":"makeFpaToBv(_:_:_:signed:)","abstract":"<p>Produces a term that represents the conversion of the floating-point term","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeFpaToFPFloat__4sortAA0B3AstCyq_GAGyAA16RoundingModeSortVG_AGyxGq_mtAA08FloatingL0RzAaMR_r0_lF":{"name":"makeFpaToFPFloat(_:_:sort:)","abstract":"<p>Conversion of a FloatingPoint term into another term of different","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeFpaToFPFloatAny__4sortAA0B3AstCyAA0H6FPSortVGAGyAA16RoundingModeSortVG_AA0hbJ0CAA0bN0CtF":{"name":"makeFpaToFPFloatAny(_:_:sort:)","abstract":"<p>Conversion of a FloatingPoint term into another term of different","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaToFPReal__4sortAA0B3AstCyxGAGyAA16RoundingModeSortVG_AGyAA04RealL0VGxmtAA08FloatingL0RzlF":{"name":"makeFpaToFPReal(_:_:sort:)","abstract":"<p>Conversion of a term of real sort into a term of FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeFpaToFPReal__4sortAA0B3AstCyAA9AnyFPSortVGAGyAA16RoundingModeSortVG_AGyAA04RealN0VGAA0bN0CtF":{"name":"makeFpaToFPReal(_:_:sort:)","abstract":"<p>Conversion of a term of real sort into a term of FloatingPoint sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaToRealyAA0B3AstCyAA0G4SortVGAFyxGAA08FloatingI0RzlF":{"name":"makeFpaToReal(_:)","abstract":"<p>Conversion of a floating-point term into a real-numbered term.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeFpaToRealyAA0B3AstCyAA0G4SortVGAFyAA9AnyFPSortVGF":{"name":"makeFpaToReal(_:)","abstract":"<p>Conversion of a floating-point term into a real-numbered term.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeFpaToInt12roundingMode_AA0B3AstCyAA0G4SortVGAGyAA08RoundingiK0VG_AGyxGtAA08FloatingK0RzlF":{"name":"makeFpaToInt(roundingMode:_:)","abstract":"<p>Coerce a floating-point number to an integer, rounding with a","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11fpaGetEbits4sorts6UInt32Vxm_tAA12FloatingSortRzlF":{"name":"fpaGetEbits(sort:)","abstract":"<p>Retrieves the number of bits reserved for the exponent in a FloatingPoint","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11fpaGetEbits4sorts6UInt32VAA0B4SortC_tF":{"name":"fpaGetEbits(sort:)","abstract":"<p>Retrieves the number of bits reserved for the exponent in a FloatingPoint","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11fpaGetSbits4sorts6UInt32Vxm_tAA12FloatingSortRzlF":{"name":"fpaGetSbits(sort:)","abstract":"<p>Retrieves the number of bits reserved for the significand in a FloatingPoint","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11fpaGetSbits4sorts6UInt32VAA0B4SortC_tF":{"name":"fpaGetSbits(sort:)","abstract":"<p>Retrieves the number of bits reserved for the significand in a FloatingPoint","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15fpaIsNumeralNanySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralNan(_:)","abstract":"<p>Checks whether a given floating-point numeral is a NaN.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20fpaIsNumeralInfiniteySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralInfinite(_:)","abstract":"<p>Checks whether a given floating-point numeral is a +oo or -oo.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16fpaIsNumeralZeroySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralZero(_:)","abstract":"<p>Checks whether a given floating-point numeral is +zero or -zero.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18fpaIsNumeralNormalySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralNormal(_:)","abstract":"<p>Checks whether a given floating-point numeral is normal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC21fpaIsNumeralSubnormalySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralSubnormal(_:)","abstract":"<p>Checks whether a given floating-point numeral is subnormal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20fpaIsNumeralPositiveySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralPositive(_:)","abstract":"<p>Checks whether a given floating-point numeral is positive.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20fpaIsNumeralNegativeySbAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaIsNumeralNegative(_:)","abstract":"<p>Checks whether a given floating-point numeral is negative.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17fpaGetNumeralSignys5Int32VAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaGetNumeralSign(_:)","abstract":"<p>Retrieves the sign of a floating-point literal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC30fpaGetNumeralSignificandStringySSAA0B3AstCyxGAA12FloatingSortRzlF":{"name":"fpaGetNumeralSignificandString(_:)","abstract":"<p>Return the significand value of a floating-point numeral as a string.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC27fpaGetNumeralExponentString_6biasedSSAA0B3AstCyxG_SbtAA12FloatingSortRzlF":{"name":"fpaGetNumeralExponentString(_:biased:)","abstract":"<p>Return the exponent value of a floating-point numeral as a string.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8makeTrueAA0B3AstCySbGyF":{"name":"makeTrue()","abstract":"<p>Create an AST node representing <code>true</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeFalseAA0B3AstCySbGyF":{"name":"makeFalse()","abstract":"<p>Create an AST node representing <code>false</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeEqualyAA0B3AstCySbGAFyxG_AHtAA8SortKindRzlF":{"name":"makeEqual(_:_:)","abstract":"<p>Create an AST node representing <code>l = r</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeEqualAnyyAA0B3AstCySbGAA0fbG0C_AItF":{"name":"makeEqualAny(_:_:)","abstract":"<p>Create an AST node representing <code>l = r</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeDistinctyAA0B3AstCySbGSayAFyxGGAA8SortKindRzlF":{"name":"makeDistinct(_:)","abstract":"<p>Create an AST node representing <code>distinct(args[0], ..., args[num_args-1])</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeDistinctAnyyAA0B3AstCySbGSayAA0bG4BaseCGF":{"name":"makeDistinctAny(_:)","abstract":"<p>Create an AST node representing <code>distinct(args[0], ..., args[num_args-1])</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeNotyAA0B3AstCySbGAGF":{"name":"makeNot(_:)","abstract":"<p>Create an AST node representing <code>not(a)</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeIfThenElseyAA0B3AstCyxGAFySbG_A2GtAA8SortKindRzlF":{"name":"makeIfThenElse(_:_:_:)","abstract":"<p>Create an AST node representing an if-then-else: <code>ite(t1, t2, t3)</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeIffyAA0B3AstCySbGAG_AGtF":{"name":"makeIff(_:_:)","abstract":"<p>Create an AST node representing <code>t1 iff t2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeImpliesyAA0B3AstCySbGAG_AGtF":{"name":"makeImplies(_:_:)","abstract":"<p>Create an AST node representing <code>t1 implies t2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeXoryAA0B3AstCySbGAG_AGtF":{"name":"makeXor(_:_:)","abstract":"<p>Create an AST node representing <code>t1 xor t2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7makeAndyAA0B3AstCySbGSayAGGF":{"name":"makeAnd(_:)","abstract":"<p>Create an AST node representing <code>args[0] and ... and args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeAndAnyyAA0B3AstCySbGSayAA0fbG0CGF":{"name":"makeAndAny(_:)","abstract":"<p>Create an AST node representing <code>args[0] and ... and args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC6makeOryAA0B3AstCySbGSayAGGF":{"name":"makeOr(_:)","abstract":"<p>Create an AST node representing <code>args[0] or ... or args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeOrAnyyAA0B3AstCySbGSayAA0fbG0CGF":{"name":"makeOrAny(_:)","abstract":"<p>Create an AST node representing <code>args[0] or ... or args[num_args-1]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeNumeral6number4sortAA0B3AstCyxGSS_xmtAA13NumericalSortRzlF":{"name":"makeNumeral(number:sort:)","abstract":"<p>Create a numeral of a given sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeNumeral6number4sortAA03AnyB3AstCSS_AA0B4SortCtF":{"name":"makeNumeral(number:sort:)","abstract":"<p>Create a numeral of a given sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8makeRealyAA0B3AstCyAA0E4SortVGs5Int32V_AKtF":{"name":"makeReal(_:_:)","abstract":"<p>Create a real from a fraction.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeIntegeryAA0B3AstCyAA7IntSortVGs5Int32VF":{"name":"makeInteger(_:)","abstract":"<p>Create a numeral of an int, bit-vector, or finite-domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeIntegerBvyAA0B3AstCyAA14BitVectorOfIntVys5Int32VGGAJF":{"name":"makeIntegerBv(_:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeInteger1BvyAA0B3AstCyAA14BitVectorSort1VGs6UInt32VF":{"name":"makeInteger1Bv(_:)","abstract":"<p>Create a numeral of a bit-vector of one bit.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeUnsignedIntegeryAA0B3AstCyAA7IntSortVGs6UInt32VF":{"name":"makeUnsignedInteger(_:)","abstract":"<p>Create a numeral of an int, bit-vector, or finite-domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC21makeUnsignedIntegerBvyAA0B3AstCyAA14BitVectorOfIntVys6UInt32VGGAJF":{"name":"makeUnsignedIntegerBv(_:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeInteger64yAA0B3AstCyAA7IntSortVGs5Int64VF":{"name":"makeInteger64(_:)","abstract":"<p>Create a numeral of an int, bit-vector, or finite-domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeInteger64BvyAA0B3AstCyAA14BitVectorOfIntVys5Int64VGGAJF":{"name":"makeInteger64Bv(_:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC21makeUnsignedInteger64yAA0B3AstCyAA7IntSortVGs6UInt64VF":{"name":"makeUnsignedInteger64(_:)","abstract":"<p>Create a numeral of an int, bit-vector, or finite-domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC24makeUnsignedInteger64Any_4sortAA0gB3AstCs6UInt64V_AA0B4SortCtF":{"name":"makeUnsignedInteger64Any(_:sort:)","abstract":"<p>Create a numeral of an int, bit-vector, or finite-domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC23makeUnsignedInteger64BvyAA0B3AstCyAA14BitVectorOfIntVys6UInt64VGGAJF":{"name":"makeUnsignedInteger64Bv(_:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeInteger128Bv8highBits03lowH0AA0B3AstCyAA16BitVectorSort128VGs6UInt64V_AMtF":{"name":"makeInteger128Bv(highBits:lowBits:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC24makeUnsignedInteger128Bv8highBits03lowI0AA0B3AstCyAA16BitVectorSort128VGs6UInt64V_AMtF":{"name":"makeUnsignedInteger128Bv(highBits:lowBits:)","abstract":"<p>Create a numeral of a bit-vector.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22makeIntegerBvFromBoolsyAA0B3AstCyAA16AnyBitVectorSortVGSaySbGF":{"name":"makeIntegerBvFromBools(_:)","abstract":"<p>Create a bit-vector numeral from a vector of Booleans.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16getNumeralStringySSAA03AnyB3AstCF":{"name":"getNumeralString(_:)","abstract":"<p>Return numeral value, as a decimal string of a numeric constant term</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15getNumeralInt64ys0F0VSgAA03AnyB3AstCF":{"name":"getNumeralInt64(_:)","abstract":"<p>Similar to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Context.html#/s:7SwiftZ30B7ContextC16getNumeralStringySSAA03AnyB3AstCF\">getNumeralString(_:)</a></code>, but only succeeds if the value can","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16getNumeralUInt64ys0F0VSgAA03AnyB3AstCF":{"name":"getNumeralUInt64(_:)","abstract":"<p>Similar to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Context.html#/s:7SwiftZ30B7ContextC16getNumeralStringySSAA03AnyB3AstCF\">getNumeralString(_:)</a></code>, but only succeeds if the value can","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18parseSmtlib2String_5sorts5declsAA0B9AstVectorCSS_SayAA0B6SymbolC4name_AA0B4SortCtGSayAjK_AA0B8FuncDeclCtGtKF":{"name":"parseSmtlib2String(_:sorts:decls:)","abstract":"<p>Parse the given string using the SMT-LIB2 parser.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16parseSmtlib2File8filePath5sorts5declsAA0B9AstVectorCSS_SayAA0B6SymbolC4name_AA0B4SortCtGSayAkL_AA0B8FuncDeclCtGtKF":{"name":"parseSmtlib2File(filePath:sorts:decls:)","abstract":"<p>Parse the contents of a given file path using the SMT-LIB2 parser.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17evalSmtlib2StringyS2SF":{"name":"evalSmtlib2String(_:)","abstract":"<p>Parse and evaluate and SMT-LIB2 command sequence. The state from a","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC012createParserC0AA0beC0CyF":{"name":"createParserContext()","abstract":"<p>Create a parser context.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makePatternyAA0bE0CSayAA03AnyB3AstCGF":{"name":"makePattern(_:)","abstract":"<p>Create a pattern for quantifier instantiation.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeBoundyAA03AnyB3AstCs6UInt32V_AA0B4SortCtF":{"name":"makeBound(_:_:)","abstract":"<p>Create a bound variable.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeForall6weight8patterns12declarations4bodyAA03AnyB3AstCs6UInt32V_SayAA0B7PatternCGSayAA0B4SortC_AA0B6SymbolCtGAJtF":{"name":"makeForall(weight:patterns:declarations:body:)","abstract":"<p>Create a forall formula. It takes an expression <code>body</code> that contains","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeExists6weight8patterns12declarations4bodyAA03AnyB3AstCs6UInt32V_SayAA0B7PatternCGSayAA0B4SortC_AA0B6SymbolCtGAJtF":{"name":"makeExists(weight:patterns:declarations:body:)","abstract":"<p>Create an exists formula. Similar to <code>makeForall</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeQuantifier8isForall6weight8patterns12declarations4bodyAA03AnyB3AstCSb_s6UInt32VSayAA0B7PatternCGSayAA0B4SortC_AA0B6SymbolCtGAKtF":{"name":"makeQuantifier(isForall:weight:patterns:declarations:body:)","abstract":"<p>Create a quantifier - universal or existential, with pattern hints.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeRePlusyAA0B10RegularExpCyxGAgA8SortKindRzlF":{"name":"makeRePlus(_:)","abstract":"<p>Create the regular language <code>re+</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeRePlusAnyyAA0gB3AstCAFF":{"name":"makeRePlusAny(_:)","abstract":"<p>Create the regular language <code>re+</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeReStaryAA0B10RegularExpCyxGAgA8SortKindRzlF":{"name":"makeReStar(_:)","abstract":"<p>Create the regular language <code>re*</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeReStarAnyyAA0gB3AstCAFF":{"name":"makeReStarAny(_:)","abstract":"<p>Create the regular language <code>re*</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeReOptionyAA0B10RegularExpCyxGAgA8SortKindRzlF":{"name":"makeReOption(_:)","abstract":"<p>Create the regular language <code>[re]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeReOptionAnyyAA0gB3AstCAFF":{"name":"makeReOptionAny(_:)","abstract":"<p>Create the regular language <code>[re]</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeReUnionyAA0B10RegularExpCyxGSayAGGAA8SortKindRzlF":{"name":"makeReUnion(_:)","abstract":"<p>Create the union of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeReUnionAnyyAA0gB3AstCSayAFGF":{"name":"makeReUnionAny(_:)","abstract":"<p>Create the union of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeReConcatyAA0B10RegularExpCyxGSayAGGAA8SortKindRzlF":{"name":"makeReConcat(_:)","abstract":"<p>Create the concatenation of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeReConcatAnyyAA0gB3AstCSayAFGF":{"name":"makeReConcatAny(_:)","abstract":"<p>Create the concatenation of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeReRange3low4highAA0B10RegularExpCyxGAA0B3SeqCyxG_ALtAA8SortKindRzlF":{"name":"makeReRange(low:high:)","abstract":"<p>Create the range regular expression over two sequences of length 1.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeReRangeAny3low4highAA0gB3AstCAH_AHtF":{"name":"makeReRangeAny(low:high:)","abstract":"<p>Create the range regular expression over two sequences of length 1.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeReAllCharyAA0B10RegularExpCyxGAA0E4SortVyxGmAA0J4KindRzlF":{"name":"makeReAllChar(_:)","abstract":"<p>Create a regular expression that accepts all singleton sequences of the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeReAllCharAnyyAA0hB3AstCAA0B4SortCF":{"name":"makeReAllCharAny(_:)","abstract":"<p>Create a regular expression that accepts all singleton sequences of the","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeReLoop_3low4highAA0B10RegularExpCyxGAI_s6UInt32VAKtAA8SortKindRzlF":{"name":"makeReLoop(_:low:high:)","abstract":"<p>Create a regular expression loop.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeReLoopAny_3low4highAA0gB3AstCAH_s6UInt32VAJtF":{"name":"makeReLoopAny(_:low:high:)","abstract":"<p>Create a regular expression loop.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeRePower_5countAA0B10RegularExpCyxGAH_s6UInt32VtAA8SortKindRzlF":{"name":"makeRePower(_:count:)","abstract":"<p>Create a power regular expression.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeRePowerAny_5countAA0gB3AstCAG_s6UInt32VtF":{"name":"makeRePowerAny(_:count:)","abstract":"<p>Create a power regular expression.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeReIntersectyAA0B10RegularExpCyxGSayAGGAA8SortKindRzlF":{"name":"makeReIntersect(_:)","abstract":"<p>Create the intersection of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeReIntersectAnyyAA0gB3AstCSayAFGF":{"name":"makeReIntersectAny(_:)","abstract":"<p>Create the intersection of the regular languages.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeReComplementyAA0B10RegularExpCyxGAgA8SortKindRzlF":{"name":"makeReComplement(_:)","abstract":"<p>Create the complement of the regular language <code>re</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeReComplementAnyyAA0gB3AstCAFF":{"name":"makeReComplementAny(_:)","abstract":"<p>Create the complement of the regular language <code>re</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeReDiffyAA0B10RegularExpCyxGAG_AGtAA8SortKindRzlF":{"name":"makeReDiff(_:_:)","abstract":"<p>Create the difference of regular expressions.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeReDiffAnyyAA0gB3AstCAF_AFtF":{"name":"makeReDiffAny(_:_:)","abstract":"<p>Create the difference of regular expressions.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeReEmptyyAA0B10RegularExpCyxGAA0E4SortVyxGmAA0I4KindRzlF":{"name":"makeReEmpty(_:)","abstract":"<p>Create an empty regular expression of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeReEmptyAnyyAA0gB3AstCAA0B4SortCF":{"name":"makeReEmptyAny(_:)","abstract":"<p>Create an empty regular expression of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeReFullyAA0B10RegularExpCyxGAA0E4SortVyxGmAA0I4KindRzlF":{"name":"makeReFull(_:)","abstract":"<p>Create an universal regular expression of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeReFullAnyyAA0gB3AstCAA0B4SortCF":{"name":"makeReFullAny(_:)","abstract":"<p>Create an universal regular expression of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8makeCharyAA0B3AstCyAA0E4SortVGs6UInt32VF":{"name":"makeChar(_:)","abstract":"<p>Creates a character literal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeCharLeyAA0B3AstCySbGAFyAA0E4SortVG_AJtF":{"name":"makeCharLe(_:_:)","abstract":"<p>Create less than or equal to between two characters.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeCharToIntyAA0B3AstCyAA0G4SortVGAFyAA0eI0VGF":{"name":"makeCharToInt(_:)","abstract":"<p>Create an integer (code point) from character.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeCharToBvyAA0B3AstCyAA16AnyBitVectorSortVGAFyAA0eL0VGF":{"name":"makeCharToBv(_:)","abstract":"<p>Create a bit-vector (code point) from character.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeCharFromBvyAA0B3AstCyAA0E4SortVGAFyxGAA09BitVectorI0RzlF":{"name":"makeCharFromBv(_:)","abstract":"<p>Create a character from a bit-vector (code point).</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeCharIsDigityAA0B3AstCySbGAFyAA0E4SortVGF":{"name":"makeCharIsDigit(_:)","abstract":"<p>Create a check if the character is a digit.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSeqEmptyyAA0bE0CyxGAA0E4SortVyxGmAA0G4KindRzlF":{"name":"makeSeqEmpty(_:)","abstract":"<p>Create an empty sequence of the sequence of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeSeqEmptyAnyyAA0gB3AstCAA0B4SortCF":{"name":"makeSeqEmptyAny(_:)","abstract":"<p>Create an empty sequence of the sequence of sort <code>sort</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeSeqUnityAA0bE0CyxGAA0B3AstCyxGAA8SortKindRzlF":{"name":"makeSeqUnit(_:)","abstract":"<p>Create a unit sequence of <code>ast</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSeqUnitAnyyAA0gB3AstCAFF":{"name":"makeSeqUnitAny(_:)","abstract":"<p>Create a unit sequence of <code>ast</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSeqConcatyAA0bE0CyxGSayAGGAA8SortKindRzlF":{"name":"makeSeqConcat(_:)","abstract":"<p>Concatenate sequences.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSeqConcatAnyyAA0gB3AstCSayAFGF":{"name":"makeSeqConcatAny(_:)","abstract":"<p>Concatenate sequences.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSeqPrefix_6prefixAA0B3AstCySbGAA0bE0CyxG_AKtAA8SortKindRzlF":{"name":"makeSeqPrefix(_:prefix:)","abstract":"<p>Check if <code>prefix</code> is a prefix of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSeqPrefixAny_6prefixAA0B3AstCySbGAA0gbI0C_AJtF":{"name":"makeSeqPrefixAny(_:prefix:)","abstract":"<p>Check if <code>prefix</code> is a prefix of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSeqSuffix_6suffixAA0B3AstCySbGAA0bE0CyxG_AKtAA8SortKindRzlF":{"name":"makeSeqSuffix(_:suffix:)","abstract":"<p>Check if <code>suffix</code> is a suffix of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSeqSuffixAny_6suffixAA0B3AstCySbGAA0gbI0C_AJtF":{"name":"makeSeqSuffixAny(_:suffix:)","abstract":"<p>Check if <code>suffix</code> is a suffix of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeSeqContains_11subsequenceAA0B3AstCySbGAA0bE0CyxG_AKtAA8SortKindRzlF":{"name":"makeSeqContains(_:subsequence:)","abstract":"<p>Check if <code>subsequence</code> is a subsequence of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeSeqContainsAny_11subsequenceAA0B3AstCySbGAA0gbI0C_AJtF":{"name":"makeSeqContainsAny(_:subsequence:)","abstract":"<p>Check if <code>subsequence</code> is a subsequence of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSeqExtract_6offset6lengthAA0bE0CyxGAI_AA0B3AstCyAA7IntSortVGANtAA0K4KindRzlF":{"name":"makeSeqExtract(_:offset:length:)","abstract":"<p>Extract subsequence starting at <code>offset</code> of <code>length</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeSeqExtractAny_6offset6lengthAA0gB3AstCAH_A2HtF":{"name":"makeSeqExtractAny(_:offset:length:)","abstract":"<p>Extract subsequence starting at <code>offset</code> of <code>length</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSeqReplace_3src4destAA0bE0CyxGAI_A2ItAA8SortKindRzlF":{"name":"makeSeqReplace(_:src:dest:)","abstract":"<p>Replace the first occurrence of <code>src</code> with <code>dst</code> in <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeSeqReplaceAny_3src4destAA0gB3AstCAH_A2HtF":{"name":"makeSeqReplaceAny(_:src:dest:)","abstract":"<p>Replace the first occurrence of <code>src</code> with <code>dst</code> in <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeSeqAt_5indexAA0bE0CyxGAH_AA0B3AstCyAA7IntSortVGtAA0J4KindRzlF":{"name":"makeSeqAt(_:index:)","abstract":"<p>Retrieve from <code>sequence</code> the unit sequence positioned at position <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSeqAtAny_5indexAA0gB3AstCAG_AGtF":{"name":"makeSeqAtAny(_:index:)","abstract":"<p>Retrieve from <code>sequence</code> the unit sequence positioned at position <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSeqNth_5indexAA0B3AstCyxGAA0bE0CyxG_AGyAA7IntSortVGtAA0J4KindRzlF":{"name":"makeSeqNth(_:index:)","abstract":"<p>Retrieve from <code>sequence</code> the the element positioned at position <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSeqNthAny_5indexAA0gB3AstCAG_AGtF":{"name":"makeSeqNthAny(_:index:)","abstract":"<p>Retrieve from <code>sequence</code> the the element positioned at position <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSeqLengthyAA0B3AstCyAA7IntSortVGAA0bE0CyxGAA0I4KindRzlF":{"name":"makeSeqLength(_:)","abstract":"<p>Returns the length of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSeqLengthAnyyAA0B3AstCyAA7IntSortVGAA0gbH0CF":{"name":"makeSeqLengthAny(_:)","abstract":"<p>Returns the length of <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSeqIndex_6substr6offsetAA0B3AstCyAA7IntSortVGAA0bE0CyxG_AnKtAA0K4KindRzlF":{"name":"makeSeqIndex(_:substr:offset:)","abstract":"<p>Return index of the first occurrence of <code>substr</code> in <code>sequence</code> starting","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeSeqIndexAny_6substr6offsetAA0B3AstCyAA7IntSortVGAA0gbJ0C_A2MtF":{"name":"makeSeqIndexAny(_:substr:offset:)","abstract":"<p>Return index of the first occurrence of <code>substr</code> in <code>sequence</code> starting","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSeqLastIndex_6substrAA0B3AstCyAA7IntSortVGAA0bE0CyxG_AMtAA0K4KindRzlF":{"name":"makeSeqLastIndex(_:substr:)","abstract":"<p>Return index of the last occurrence of <code>substr</code> in <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeSeqLastIndexAny_6substrAA0B3AstCyAA7IntSortVGAA0hbJ0C_ALtF":{"name":"makeSeqLastIndexAny(_:substr:)","abstract":"<p>Return index of the last occurrence of <code>substr</code> in <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeSeqToReyAA0B10RegularExpCyxGAA0bE0CyxGAA8SortKindRzlF":{"name":"makeSeqToRe(_:)","abstract":"<p>Create a regular expression that accepts the sequence <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSeqToReAnyyAA0hB3AstCAFF":{"name":"makeSeqToReAny(_:)","abstract":"<p>Create a regular expression that accepts the sequence <code>sequence</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeSeqInRe_5regexAA0B3AstCySbGAA0bE0CyxG_AA0B10RegularExpCyxGtAA8SortKindRzlF":{"name":"makeSeqInRe(_:regex:)","abstract":"<p>Check for regular expression membership.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeSeqInReAny_5regexAA0B3AstCySbGAA0hbJ0C_AJtF":{"name":"makeSeqInReAny(_:regex:)","abstract":"<p>Check for regular expression membership.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeSetSortyAA0bF0CAFF":{"name":"makeSetSort(_:)","abstract":"<p>Create Set type.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeEmptySetyAA0B3AstCyAA9ArraySortVyxSbGGxmAA0I4KindRzlF":{"name":"makeEmptySet(_:)","abstract":"<p>Create the empty set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeEmptySetAnyyAA0gB3AstCAA0B4SortCF":{"name":"makeEmptySetAny(_:)","abstract":"<p>Create the empty set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeFullSetyAA0B3AstCyAA9ArraySortVyxSbGGxmAA0I4KindRzlF":{"name":"makeFullSet(_:)","abstract":"<p>Create the full set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC11makeFullSetyAA03AnyB3AstCAA0B4SortCF":{"name":"makeFullSet(_:)","abstract":"<p>Create the full set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSetAdd_7elementAA0B3AstCyAA9ArraySortVyxSbGGAK_AGyxGtAA0J4KindRzlF":{"name":"makeSetAdd(_:element:)","abstract":"<p>Add an element to a set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSetAddAny_7elementAA0gB3AstCAG_AGtF":{"name":"makeSetAddAny(_:element:)","abstract":"<p>Add an element to a set.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSetDel_7elementAA0B3AstCyAA9ArraySortVyxSbGGAK_AGyxGtAA0J4KindRzlF":{"name":"makeSetDel(_:element:)","abstract":"<p>Remove an element from a set</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSetDelAny_7elementAA0gB3AstCAG_AGtF":{"name":"makeSetDelAny(_:element:)","abstract":"<p>Remove an element from a set</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSetUnionyAA0B3AstCyAA9ArraySortVyxSbGGSayAJGAA0I4KindRzlF":{"name":"makeSetUnion(_:)","abstract":"<p>Take the union of a list of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeSetUnionAnyyAA0gB3AstCSayAA0bH4BaseCGF":{"name":"makeSetUnionAny(_:)","abstract":"<p>Take the union of a list of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSetIntersectyAA0B3AstCyAA9ArraySortVyxSbGGSayAJGAA0I4KindRzlF":{"name":"makeSetIntersect(_:)","abstract":"<p>Take the intersection of a list of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeSetIntersectAnyyAA0gB3AstCSayAFGF":{"name":"makeSetIntersectAny(_:)","abstract":"<p>Take the intersection of a list of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17makeSetDifferenceyAA0B3AstCyAA9ArraySortVyxSbGGAJ_AJtAA0I4KindRzlF":{"name":"makeSetDifference(_:_:)","abstract":"<p>Take the different between two sets.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeSetDifferenceAnyyAA0gB3AstCAF_AFtF":{"name":"makeSetDifferenceAny(_:_:)","abstract":"<p>Take the different between two sets.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSetMember7element3setAA0B3AstCySbGAHyxG_AHyAA9ArraySortVyxSbGGtAA0K4KindRzlF":{"name":"makeSetMember(element:set:)","abstract":"<p>Check for set membership.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSetMemberAny7element3setAA0B3AstCySbGAA0gbJ0C_AKtF":{"name":"makeSetMemberAny(element:set:)","abstract":"<p>Check for set membership.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeSetSubsetyAA0B3AstCySbGAFyAA9ArraySortVyxSbGG_AKtAA0I4KindRzlF":{"name":"makeSetSubset(_:_:)","abstract":"<p>Check for subset-ness of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSetSubsetAnyyAA0B3AstCySbGAA0gbH0C_AItF":{"name":"makeSetSubsetAny(_:_:)","abstract":"<p>Check for subset-ness of sets</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSolverAA0bE0CyF":{"name":"makeSolver()","abstract":"<p>Create a new solver. This solver is a &ldquo;combined solver&rdquo; (see combined_solver","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeSimpleSolverAA0bF0CyF":{"name":"makeSimpleSolver()","abstract":"<p>Create a new incremental solver.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeSolverForLogicyAA0bE0CAA0B6SymbolCF":{"name":"makeSolverForLogic(_:)","abstract":"<p>Create a new solver customized for the given logic.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeSolver10fromTacticAA0bE0CAA0bG0C_tF":{"name":"makeSolver(fromTactic:)","abstract":"<p>Create a new solver that is implemented using the given tactic.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7getSortyAA0bE0CAA0B7AstBaseCF":{"name":"getSort(_:)","abstract":"<p>Return the sort of an AST node.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC21makeUninterpretedSortyAA0bF0CAA0B6SymbolCF":{"name":"makeUninterpretedSort(_:)","abstract":"<p>Create a free (uninterpreted) type using the given name (symbol).</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7intSortAA0bE0CyF":{"name":"intSort()","abstract":"<p>Create the integer type.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8boolSortAA0bE0CyF":{"name":"boolSort()","abstract":"<p>Create the Boolean type.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8realSortAA0bE0CyF":{"name":"realSort()","abstract":"<p>Create the real type.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13bitVectorSort4sizeAA0bF0Cs6UInt32V_tF":{"name":"bitVectorSort(size:)","abstract":"<p>Create a bit-vector type of the given size.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20makeFiniteDomainSort4name4sizeAA0befG0CAA0B6SymbolC_s6UInt64VtF":{"name":"makeFiniteDomainSort(name:size:)","abstract":"<p>Create a named finite domain sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeArraySort6domain5rangeAA0bF0CAH_AHtF":{"name":"makeArraySort(domain:range:)","abstract":"<p>Create an array type.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14makeArraySortN7domains5rangeAA0bF0CSayAHG_AHtF":{"name":"makeArraySortN(domains:range:)","abstract":"<p>Create an array type with N arguments</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeTupleSort02mkE4Name10fieldNames0I5SortsAA0B8FuncDeclC0geM0_SayAIG04projM0AA0bF0C05tupleF0tAA0B6SymbolC_SayAQGSayANGtF":{"name":"makeTupleSort(mkTupleName:fieldNames:fieldSorts:)","abstract":"<p>Create a tuple type.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeEnumerationSort4name9enumNamesSayAA0B8FuncDeclCG0H9Constants_AI0H7TestersAA0bF0C4sorttAA0B6SymbolC_SayAPGtF":{"name":"makeEnumerationSort(name:enumNames:)","abstract":"<p>Create a enumeration sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15makeConstructor4name10recognizer10fieldNames5sorts8sortRefsAA0bE0CAA0B6SymbolC_AMSayAMGSayAA0B4SortCGSays6UInt32VGtF":{"name":"makeConstructor(name:recognizer:fieldNames:sorts:sortRefs:)","abstract":"<p>Create a constructor.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeDatatype4name12constructorsAA0B4SortCAA0B6SymbolC_SayAA0B11ConstructorCGztF":{"name":"makeDatatype(name:constructors:)","abstract":"<p>Create datatype, such as lists, trees, records, enumerations or unions","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC19makeConstructorListyAA0beF0CSayAA0bE0CGF":{"name":"makeConstructorList(_:)","abstract":"<p>Create list of constructors.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeDatatypes9sortNames16constructorListsSayAA0B4SortCGSayAA0B6SymbolCG_SayAA0B15ConstructorListCGtF":{"name":"makeDatatypes(sortNames:constructorLists:)","abstract":"<p>Create mutually recursive datatypes</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16queryConstructor11constructor9numFieldsAA0B8FuncDeclCAE_AH6testerSayAHG9accessorstAA0bE0C_s6UInt32VtF":{"name":"queryConstructor(constructor:numFields:)","abstract":"<p>Query constructor for declared functions.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7seqSort7elementAA0bE0CAG_tF":{"name":"seqSort(element:)","abstract":"<p>Create a sequence sort out of the sort for the elements.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9isSeqSortySbAA0bF0CF":{"name":"isSeqSort(_:)","abstract":"<p>Returns whether <code>sort</code> is a sequence sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC15getSeqSortBasisyAA0bF0CAFF":{"name":"getSeqSortBasis(_:)","abstract":"<p>Retrieve basis sort for sequence sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC6reSort03seqE0AA0bE0CAG_tF":{"name":"reSort(seqSort:)","abstract":"<p>Create a regular expression sort out of the sort for the underlying sequence","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8isReSortySbAA0bF0CF":{"name":"isReSort(_:)","abstract":"<p>Check if <code>sort</code> is a regular expression sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC14getReSortBasisyAA0bF0CAFF":{"name":"getReSortBasis(_:)","abstract":"<p>Retrieve basis sort for a regex sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10stringSortAA0bE0CyF":{"name":"stringSort()","abstract":"<p>Create a sort for unicode strings.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12isStringSortySbAA0bF0CF":{"name":"isStringSort(_:)","abstract":"<p>Check if <code>sort</code> is a string sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8charSortAA0bE0CyF":{"name":"charSort()","abstract":"<p>Create a sort for unicode characters.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10isCharSortySbAA0bF0CF":{"name":"isCharSort(_:)","abstract":"<p>Check if <code>sort</code> is a character sort.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeStringyAA0B3SeqCyAA8CharSortVGSSF":{"name":"makeString(_:)","abstract":"<p>Create a string constant out of the string that is passed in","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8isStringySbAA0B7AstBaseCF":{"name":"isString(_:)","abstract":"<p>Determine if <code>ast</code> is a string constant.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeStrLtyAA0B3AstCySbGAA0B3SeqCyAA8CharSortVG_ALtF":{"name":"makeStrLt(_:_:)","abstract":"<p>Check if <code>s1</code> is lexicographically strictly less than <code>s2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9makeStrLeyAA0B3AstCySbGAA0B3SeqCyAA8CharSortVG_ALtF":{"name":"makeStrLe(_:_:)","abstract":"<p>Check if <code>s1</code> is equal or lexicographically strictly less than <code>s2</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeStrToIntyAA0B3AstCyAA0G4SortVGAA0B3SeqCyAA04CharI0VGF":{"name":"makeStrToInt(_:)","abstract":"<p>Convert string to integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeIntToStryAA0B3SeqCyAA8CharSortVGAA0B3AstCyAA0eJ0VGF":{"name":"makeIntToStr(_:)","abstract":"<p>Integer to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeStringToCodeyAA0B3AstCyAA7IntSortVGAA0B3SeqCyAA04CharJ0VGF":{"name":"makeStringToCode(_:)","abstract":"<p>String to code conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC18makeStringFromCodeyAA0B3SeqCyAA8CharSortVGAA0B3AstCyAA03IntJ0VGF":{"name":"makeStringFromCode(_:)","abstract":"<p>Code to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeUbvToStryAA0B3SeqCyAA8CharSortVGAA0B3AstCyxGAA09BitVectorJ0RzlF":{"name":"makeUbvToStr(_:)","abstract":"<p>Unsigned bit-vector to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeUbvToStryAA0B3SeqCyAA8CharSortVGAA0B3AstCyAA012AnyBitVectorJ0VGF":{"name":"makeUbvToStr(_:)","abstract":"<p>Unsigned bit-vector to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSbvToStryAA0B3SeqCyAA8CharSortVGAA0B3AstCyxGAA09BitVectorJ0RzlF":{"name":"makeSbvToStr(_:)","abstract":"<p>ned bit-vector to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12makeSbvToStryAA0B3SeqCyAA8CharSortVGAA0B3AstCyAA012AnyBitVectorJ0VGF":{"name":"makeSbvToStr(_:)","abstract":"<p>ned bit-vector to string conversion.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13makeIntSymbolyAA0bF0Cs5Int32VF":{"name":"makeIntSymbol(_:)","abstract":"<p>Create a Z3 symbol using an integer.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16makeStringSymbolyAA0bF0CSSF":{"name":"makeStringSymbol(_:)","abstract":"<p>Create a Z3 symbol using a C string.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10makeTactic4nameAA0bE0CSS_tKF":{"name":"makeTactic(name:)","abstract":"<p>Return a tactic associated with the given name.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13getNumTacticss6UInt32VyF":{"name":"getNumTactics()","abstract":"<p>Return the number of builtin tactics available in Z3.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC13getTacticName5indexSSs6UInt32V_tF":{"name":"getTacticName(index:)","abstract":"<p>Return the name of the idx tactic.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC20getTacticDescription4nameS2S_tF":{"name":"getTacticDescription(name:)","abstract":"<p>Return a string containing a description of the tactic with the given","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10tacticSkipAA0B6TacticCyF":{"name":"tacticSkip()","abstract":"<p>Return a tactic that just return the given goal.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10tacticFailAA0B6TacticCyF":{"name":"tacticFail()","abstract":"<p>Return a tactic that always fails.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC12tacticFailIfyAA0B6TacticCAA0B5ProbeCF":{"name":"tacticFailIf(_:)","abstract":"<p>Return a tactic that fails if <code>probe</code> evaluates to false.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC22tacticFailIfNotDecidedAA0B6TacticCyF":{"name":"tacticFailIfNotDecided()","abstract":"<p>Return a tactic that fails if the goal is not trivially satisfiable (i.e.,","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC5probe5namedAA0B5ProbeCSS_tF":{"name":"probe(named:)","abstract":"<p>Return a probe associated with the given name.","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10probeConstyAA0B5ProbeCSdF":{"name":"probeConst(_:)","abstract":"<p>Return a probe that always evaluates to <code>value</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeLtyAA0B5ProbeCAF_AFtF":{"name":"probeLt(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>p1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeGtyAA0B5ProbeCAF_AFtF":{"name":"probeGt(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>p1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeLeyAA0B5ProbeCAF_AFtF":{"name":"probeLe(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>p1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeGeyAA0B5ProbeCAF_AFtF":{"name":"probeGe(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>p1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeEqyAA0B5ProbeCAF_AFtF":{"name":"probeEq(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when the value returned by <code>p1</code>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8probeAndyAA0B5ProbeCAF_AFtF":{"name":"probeAnd(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>p1</code> and <code>p2</code> evaluate to","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC7probeOryAA0B5ProbeCAF_AFtF":{"name":"probeOr(_:_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>p1</code> or <code>p2</code> evaluate to","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC8probeNotyAA0B5ProbeCAFF":{"name":"probeNot(_:)","abstract":"<p>Return a probe that evaluates to &ldquo;true&rdquo; when <code>probe</code> does not evaluate","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC10tacticName7atIndexSSs6UInt32V_tF":{"name":"tacticName(atIndex:)","abstract":"<p>Return the name of the tactic of index <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC9probeName7atIndexSSs6UInt32V_tF":{"name":"probeName(atIndex:)","abstract":"<p>Return the name of the probe of index <code>index</code>.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC17tacticDescription0D4NameS2S_tF":{"name":"tacticDescription(tacticName:)","abstract":"<p>Return a string containing a description of the tactic with the given name.</p>","parent_name":"Z3Context"},"Classes/Z3Context.html#/s:7SwiftZ30B7ContextC16probeDescription0D4NameS2S_tF":{"name":"probeDescription(probeName:)","abstract":"<p>Return a string containing a description of the probe with the given name.</p>","parent_name":"Z3Context"},"Classes/Z3ConstructorList.html#/s:7SwiftZ30B15ConstructorListC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3ConstructorList</code> belongs</p>","parent_name":"Z3ConstructorList"},"Classes/Z3Constructor.html#/s:7SwiftZ30B11ConstructorC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3Constructor</code> belongs</p>","parent_name":"Z3Constructor"},"Classes/Z3Config.html#/s:7SwiftZ30B6ConfigCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"Z3Config"},"Classes/Z3Config.html#/s:7SwiftZ30B6ConfigC12setParameter4name5valueySS_SStF":{"name":"setParameter(name:value:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Config"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3AstVector</code> belongs</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Return the size of this AST vector.</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorCyAA0bC4BaseCs6UInt32Vcip":{"name":"subscript(_:)","abstract":"<p>Return or update the AST at position <code>index</code> in this AST vector.</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorCyAA0bC4BaseCSicip":{"name":"subscript(_:)","abstract":"<p>Return or update the AST at position <code>index</code> in this AST vector.</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC4pushyyAA0bC4BaseCF":{"name":"push(_:)","abstract":"<p>Add the AST <code>ast</code> in the end of this AST vector. The size of this vector","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC6resize8newCountys6UInt32V_tF":{"name":"resize(newCount:)","abstract":"<p>Resizes this AST vector.</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC8toStringSSyF":{"name":"toString()","abstract":"<p>Converts this AST vector to a string.</p>","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:7SwiftZ30B9AstVectorC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST vector <code>self</code> from its current context to context","parent_name":"Z3AstVector"},"Classes/Z3AstVector.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"Z3AstVector"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3AstVector.html\">Z3AstVector</a></code> belongs</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Return the size of this AST map.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC4keysAA0bC6VectorCvp":{"name":"keys","abstract":"<p>Return the keys stored in this AST map.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapCyAA0bC4BaseCSgAEcip":{"name":"subscript(_:)","abstract":"<p>Return the value associated with the key <code>key</code>.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC9removeAllyyF":{"name":"removeAll()","abstract":"<p>Removes all keys from this map.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC4pushyyAA0bC4BaseCF":{"name":"push(_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC8containsySbAA0bC4BaseCF":{"name":"contains(_:)","abstract":"<p>Return true if this AST map contains the AST key <code>key</code>.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert this AST map into a string.</p>","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:7SwiftZ30B6AstMapC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST map <code>self</code> from its current context to context","parent_name":"Z3AstMap"},"Classes/Z3AstMap.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"Z3AstMap"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>The context this <code>Z3AstBase</code> belongs</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC2ids6UInt32Vvp":{"name":"id","abstract":"<p>Return a unique identifier for this AST.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC4hashs6UInt32Vvp":{"name":"hash","abstract":"<p>Return a hash code for this AST.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC5isAppSbvp":{"name":"isApp","abstract":"<p>Return <code>true</code> if this AST is an application</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC09isNumeralC0Sbvp":{"name":"isNumeralAst","abstract":"<p>Undocumented</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC17isAlgebraicNumberSbvp":{"name":"isAlgebraicNumber","abstract":"<p>Return <code>true</code> if this AST is a real algebraic number.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC5isVarSbvp":{"name":"isVar","abstract":"<p>Return <code>true</code> if this AST is a BoundVariable</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC12isQuantifierSbvp":{"name":"isQuantifier","abstract":"<p>Return <code>true</code> if this AST is a Quantifier</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC6isSortSbvp":{"name":"isSort","abstract":"<p>Return <code>true</code> if this AST is a Sort</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC10isFuncDeclSbvp":{"name":"isFuncDecl","abstract":"<p>Return <code>true</code> if this AST is a FunctionDeclaration</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC18isQuantifierForAllSbvp":{"name":"isQuantifierForAll","abstract":"<p>Determine if an ast is a universal quantifier.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC18isQuantifierExistsSbvp":{"name":"isQuantifierExists","abstract":"<p>Determine if ast is an existential quantifier.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC8isLambdaSbvp":{"name":"isLambda","abstract":"<p>Determine if ast is a lambda expression.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC8isStringSbvp":{"name":"isString","abstract":"<p>Determine if this ast is a string.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC7astKindSo0b1_E5_kindavp":{"name":"astKind","abstract":"<p>Return the kind of the given AST.</p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"Z3AstBase"},"Classes/Z3AstBase.html#/s:7SwiftZ30B7AstBaseC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert the current AST node into a string.</p>","parent_name":"Z3AstBase"},"Classes/Z3ApplyResult.html#/s:7SwiftZ30B11ApplyResultC7contextAA0B7ContextCvp":{"name":"context","abstract":"<p>Undocumented</p>","parent_name":"Z3ApplyResult"},"Classes/Z3ApplyResult.html#/s:7SwiftZ30B11ApplyResultC12subgoalCounts6UInt32Vvp":{"name":"subgoalCount","abstract":"<p>Return the number of subgoals in this <code>Z3ApplyResult</code> object returned by","parent_name":"Z3ApplyResult"},"Classes/Z3ApplyResult.html#/s:7SwiftZ30B11ApplyResultC8toStringSSyF":{"name":"toString()","abstract":"<p>Converts this <code>Z3ApplyResult</code> object returned by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Tactic.html#/s:7SwiftZ30B6TacticC5apply2to6paramsAA0B11ApplyResultCAA0B4GoalC_AA0B6ParamsCSgtF\">Z3Tactic.apply(to:params:)</a></code>","parent_name":"Z3ApplyResult"},"Classes/Z3ApplyResult.html#/s:7SwiftZ30B11ApplyResultC9subgoalAt5indexAA0B4GoalCs6UInt32V_tF":{"name":"subgoalAt(index:)","abstract":"<p>Return one of the subgoals in this <code>Z3ApplyResult</code> object returned by","parent_name":"Z3ApplyResult"},"Classes/Z3Sort.html#/s:7SwiftZ30B4SortC4sorts13OpaquePointerVvp":{"name":"sort","abstract":"<p>Alias for <code>ast</code></p>","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:7SwiftZ30B4SortC8sortNameAA0B6SymbolCvp":{"name":"sortName","abstract":"<p>Return the sort name as a symbol.</p>","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:7SwiftZ30B4SortC8sortKindSo0b1_D5_kindavp":{"name":"sortKind","abstract":"<p>Return the sort kind (e.g., array, tuple, int, bool, etc).</p>","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:7SwiftZ30B4SortC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert the current AST node into a string.</p>","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:7SwiftZ30B4SortC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Z3Sort"},"Classes/Z3Sort.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Z3Sort"},"Classes/Z3Pattern.html#/s:7SwiftZ30B7PatternC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert the current AST node into a string.</p>","parent_name":"Z3Pattern"},"Classes/Z3Pattern.html#/s:7SwiftZ30B7PatternC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"Z3Pattern"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC5aritys6UInt32Vvp":{"name":"arity","abstract":"<p>Return the number of parameters of the function declaration.</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC10domainSizes6UInt32Vvp":{"name":"domainSize","abstract":"<p>Return the number of parameters of the function declaration.</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC6domainSayAA0B4SortCGvp":{"name":"domain","abstract":"<p>Return the domain of the function declaration</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC5rangeAA0B4SortCvp":{"name":"range","abstract":"<p>Return the range of the function declaration.</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC4nameAA0B6SymbolCvp":{"name":"name","abstract":"<p>Return the name of the function declaration.</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC15parametersCounts6UInt32Vvp":{"name":"parametersCount","abstract":"<p>Return the number of parameters associated with the function declaration</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC8toStringSSyF":{"name":"toString()","abstract":"<p>Convert the current AST node into a string.</p>","parent_name":"Z3FuncDecl"},"Classes/Z3FuncDecl.html#/s:7SwiftZ30B8FuncDeclC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"Z3FuncDecl"},"Classes/Z3FiniteDomainSort.html#/s:7SwiftZ30B16FiniteDomainSortC4nameAA0B6SymbolCvp":{"name":"name","abstract":"<p>Gets the symbol for the name of this finite domain.</p>","parent_name":"Z3FiniteDomainSort"},"Classes/Z3FiniteDomainSort.html#/s:7SwiftZ30B16FiniteDomainSortC4sizes6UInt64Vvp":{"name":"size","abstract":"<p>The size of this finite domain.</p>","parent_name":"Z3FiniteDomainSort"},"Classes/Z3FiniteDomainSort.html#/s:7SwiftZ30B16FiniteDomainSortC13createNumeralyAA0bcdG0Cs6UInt64VF":{"name":"createNumeral(_:)","abstract":"<p>Creates a new numeral belonging to this finite domain sort.</p>","parent_name":"Z3FiniteDomainSort"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC7getSortyAA0bE0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with this <code>Z3Seq</code>.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC6lengthAA0B3AstCyAA7IntSortVGvp":{"name":"length","abstract":"<p>Returns the AST for this sequence&rsquo;s length.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqCyAA0B3AstCyxGAEyAA7IntSortVGcip":{"name":"subscript(_:)","abstract":"<p>Retrieve from this sequence the the element positioned at position <code>index</code>.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC5index2of6offsetAA0B3AstCyAA7IntSortVGACyxG_AKtF":{"name":"index(of:offset:)","abstract":"<p>Return index of the first occurrence of <code>search</code> in this sequence starting","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC9lastIndex2ofAA0B3AstCyAA7IntSortVGACyxG_tF":{"name":"lastIndex(of:)","abstract":"<p>Return index of the last occurrence of <code>search</code> in this sequence.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC8contains6searchAA0B3AstCySbGACyxG_tF":{"name":"contains(search:)","abstract":"<p>Check if <code>subsequence</code> is a subsequence of this sequence.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC7extract6offset6lengthACyxGAA0B3AstCyAA7IntSortVG_ALtF":{"name":"extract(offset:length:)","abstract":"<p>Extract a subsequence starting at <code>offset</code> of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Seq.html#/s:7SwiftZ30B3SeqC6lengthAA0B3AstCyAA7IntSortVGvp\">length</a></code>.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC7replace6source4destACyxGAG_AGtF":{"name":"replace(source:dest:)","abstract":"<p>Replace the first occurrence of <code>src</code> with <code>dst</code> in this sequence.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC2at5indexACyxGAA0B3AstCyAA7IntSortVG_tF":{"name":"at(index:)","abstract":"<p>Retrieve from this sequence the unit sequence positioned at position","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC12toRegularExpAA0beF0CyxGyF":{"name":"toRegularExp()","abstract":"<p>Create a regular expression that accepts this sequence.</p>","parent_name":"Z3Seq"},"Classes/Z3Seq.html#/s:7SwiftZ30B3SeqC8inRegExpyAA0B3AstCySbGAA0b7RegularF0CyxGF":{"name":"inRegExp(_:)","abstract":"<p>Check for regular expression membership.</p>","parent_name":"Z3Seq"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC7getSortyAA0bF0CAA0B7ContextCFZ":{"name":"getSort(_:)","abstract":"<p>Gets the statically-typed Z3Sort associated with this <code>Z3RegularExp</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC4plusACyxGyF":{"name":"plus()","abstract":"<p>Create a regular expression language <code>self+</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC4starACyxGyF":{"name":"star()","abstract":"<p>Create a regular expression language <code>self*</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC6optionACyxGyF":{"name":"option()","abstract":"<p>Create a regular expression language <code>[self]</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC5unionyACyxGSayAEGF":{"name":"union(_:)","abstract":"<p>Create the union of this regular language and every other in <code>others</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC6concatyACyxGSayAEGF":{"name":"concat(_:)","abstract":"<p>Create the concatenation of this regular language and every other in <code>others</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC5range3low4highACyxGAA0B3SeqCyxG_AJtF":{"name":"range(low:high:)","abstract":"<p>Create the range regular expression over two sequences of length 1.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC4loop3low4highACyxGs6UInt32V_AItF":{"name":"loop(low:high:)","abstract":"<p>Create a regular expression loop.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC5power5countACyxGs6UInt32V_tF":{"name":"power(count:)","abstract":"<p>Create a power regular expression.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC9intersectyACyxGSayAEGF":{"name":"intersect(_:)","abstract":"<p>Create the intersection of the regular languages.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC10complementACyxGyF":{"name":"complement()","abstract":"<p>Create the complement of the regular language <code>self</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3RegularExp.html#/s:7SwiftZ30B10RegularExpC10differenceyACyxGAEF":{"name":"difference(_:)","abstract":"<p>Create the difference of this regular expression and <code>other</code>.</p>","parent_name":"Z3RegularExp"},"Classes/Z3FiniteDomainNumeral.html#/s:7SwiftZ30B19FiniteDomainNumeralC11uint64Values6UInt64Vvp":{"name":"uint64Value","abstract":"<p>Gets the <code>UInt64</code> value associated with this finite domain numeral value.</p>","parent_name":"Z3FiniteDomainNumeral"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC10isPositiveSbvp":{"name":"isPositive","abstract":"<p>Returns <code>true</code> if <code>self</code> is positive, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC10isNegativeSbvp":{"name":"isNegative","abstract":"<p>Returns <code>true</code> if <code>self</code> is negative, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC6isZeroSbvp":{"name":"isZero","abstract":"<p>Returns <code>true</code> if <code>self</code> is zero, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC4signSivp":{"name":"sign","abstract":"<p>Returns <code>1</code> if <code>self</code> is positive, <code>0</code> if <code>self</code> is zero, and <code>-1</code> if it","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC4rootyACs6UInt32VF":{"name":"root(_:)","abstract":"<p>Return the <code>self^(1/k)</code></p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC5poweryACs6UInt32VF":{"name":"power(_:)","abstract":"<p>Return the <code>self^k</code></p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC5rootsyAA0B9AstVectorCSayACGF":{"name":"roots(_:)","abstract":"<p>Given a multivariate polynomial <code>self(x_0, ..., x_{n-1}, x_n)</code>, returns","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC4evalySiSayACGF":{"name":"eval(_:)","abstract":"<p>Given a multivariate polynomial <code>self(x_0, ..., x_{n-1})</code>, return the","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC12coefficientsAA0B9AstVectorCyF":{"name":"coefficients()","abstract":"<p>Return the coefficients of this polynomial.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC19polynomialRootIndexs6UInt32VyF":{"name":"polynomialRootIndex()","abstract":"<p>Return which root of a polynomial the algebraic number represents.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Return the value a + b.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Return the value a - b.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1moiyA2C_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Return the value a * b.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Return the value a / b.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &lt; rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC2leoiySbAC_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &lt;= rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC1goiySbAC_ACtFZ":{"name":">(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &gt; rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC2geoiySbAC_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs &gt;= rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs == rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Algebraic.html#/s:7SwiftZ30B9AlgebraicC2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Return <code>true</code> if <code>lhs != rhs</code>, <code>false</code> otherwise.</p>","parent_name":"Z3Algebraic"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstC9translate2toACyxGAA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstC2eeoiyACySbGACyxG_AFtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstC2neoiyACySbGACyxG_AFtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1loiyACySbGACyxG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE2leoiyACySbGACyxG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1goiyACySbGACyxG_AGtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE2geoiyACySbGACyxG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1poiyACyxGAF_AFtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1soiyACyxGAF_AFtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1moiyACyxGAF_AFtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/Z3Ast.html#/s:7SwiftZ30B3AstCA2A14ArithmeticSortRzrlE1doiyACyxGAF_AFtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Z3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC4sortAA0B4SortCSgvp":{"name":"sort","abstract":"<p>Return the sort of this AST node.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC12isWellSortedSbvp":{"name":"isWellSorted","abstract":"<p>Return <code>true</code> if this expression is well sorted.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC9boolValueSbSgvp":{"name":"boolValue","abstract":"<p>Returns <code>true</code> if this AST is true, <code>false</code> if this AST is false, and <code>nil</code>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC13numeralStringSSvp":{"name":"numeralString","abstract":"<p>Return numeral value, as a string of a numeric constant term</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC13numeralDoubleSdvp":{"name":"numeralDouble","abstract":"<p>Return numeral as a double.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC10numeralInts5Int32Vvp":{"name":"numeralInt","abstract":"<p>Return numeral as an integer.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC9numeratorACSgvp":{"name":"numerator","abstract":"<p>Return the numerator (as a numeral AST) of a numeral AST of sort Real.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC11denominatorACSgvp":{"name":"denominator","abstract":"<p>Return the denominator (as a numeral AST) of a numeral AST of sort Real.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC7isEqual2toSbAC_tF":{"name":"isEqual(to:)","abstract":"<p>Compares this term to another term.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC23getNumeralDecimalString9precisionSSs6UInt32V_tF":{"name":"getNumeralDecimalString(precision:)","abstract":"<p>Return numeral as a string in decimal notation.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC15getNumeralSmalls5Int64V3num_AF3dentSgyF":{"name":"getNumeralSmall()","abstract":"<p>Return numeral value, as a pair of 64 bit numbers if the representation","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC9translate2toAcA0B7ContextC_tF":{"name":"translate(to:)","abstract":"<p>Translate/Copy the AST <code>self</code> from its current context to context <code>target</code></p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC12unsafeCastTo4sortAA0bD0CyxGxm_tAA8SortKindRzlF":{"name":"unsafeCastTo(sort:)","abstract":"<p>An unsafe cast from a generic <code>AnyZ3Ast</code> or a specialized <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast</a></code> to","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC6castTo4sortAA0bD0CyxGSgxm_tAA8SortKindRzlF":{"name":"castTo(sort:)","abstract":"<p>A runtime type-checked cast from a generic <code>AnyZ3Ast</code> or a specialized","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC21unsafeCastToAlgebraicAA0bH0CyF":{"name":"unsafeCastToAlgebraic()","abstract":"<p>An unsafe cast from a generic <code>AnyZ3Ast</code> to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Algebraic.html\">Z3Algebraic</a></code> type.</p>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC15castToAlgebraicAA0bG0CSgyF":{"name":"castToAlgebraic()","abstract":"<p>A runtime type-checked cast from a generic <code>AnyZ3Ast</code> to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Algebraic.html\">Z3Algebraic</a></code>","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC22unsafeCastToRegularExp11elementSortAA0bhI0CyxGxm_tAA0K4KindRzlF":{"name":"unsafeCastToRegularExp(elementSort:)","abstract":"<p>An unsafe cast from a generic <code>AnyZ3Ast</code> or a specialized <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast</a></code> to","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC16castToRegularExp11elementSortAA0bgH0CyxGSgxm_tAA0J4KindRzlF":{"name":"castToRegularExp(elementSort:)","abstract":"<p>A runtime type-checked cast from a generic <code>AnyZ3Ast</code> or a specialized","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC20unsafeCastToSequence11elementSortAA0B3SeqCyxGxm_tAA0J4KindRzlF":{"name":"unsafeCastToSequence(elementSort:)","abstract":"<p>An unsafe cast from a generic <code>AnyZ3Ast</code> or a specialized <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3Ast.html\">Z3Ast</a></code> to","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html#/s:7SwiftZ303AnyB3AstC14castToSequence11elementSortAA0B3SeqCyxGSgxm_tAA0I4KindRzlF":{"name":"castToSequence(elementSort:)","abstract":"<p>A runtime type-checked cast from a generic <code>AnyZ3Ast</code> or a specialized","parent_name":"AnyZ3Ast"},"Classes/AnyZ3Ast.html":{"name":"AnyZ3Ast","abstract":"<p>The abstract syntax tree (AST) class for Expression syntaxes.</p>"},"Classes/Z3Ast.html":{"name":"Z3Ast","abstract":"<p>An expression abstract syntax tree (AST) class that is typed with a sort to"},"Classes/Z3Algebraic.html":{"name":"Z3Algebraic","abstract":"<p>An algebraic number that can be used in the Z3 real algebraic number package.</p>"},"Classes/Z3FiniteDomainNumeral.html":{"name":"Z3FiniteDomainNumeral","abstract":"<p>A numeral value belonging to a specific finite domain.</p>"},"Classes/Z3RegularExp.html":{"name":"Z3RegularExp","abstract":"<p>An AST class for Z3 regular expression sorts with a given base element sort.</p>"},"Classes/Z3Seq.html":{"name":"Z3Seq","abstract":"<p>An AST class for Z3 sequence sorts with a given base element sort.</p>"},"Classes/Z3FiniteDomainSort.html":{"name":"Z3FiniteDomainSort","abstract":"<p>A named finite domain.</p>"},"Classes/Z3FuncDecl.html":{"name":"Z3FuncDecl","abstract":"<p>A function declaration node.</p>"},"Classes/Z3Pattern.html":{"name":"Z3Pattern","abstract":"<p>Kind of AST used to represent pattern and multi-patterns used to guide"},"Classes/Z3Sort.html":{"name":"Z3Sort","abstract":"<p>Undocumented</p>"},"Classes/Z3ApplyResult.html":{"name":"Z3ApplyResult","abstract":"<p>Z3ApplyResult objects represent the result of an application of a tactic to"},"Classes/Z3AstBase.html":{"name":"Z3AstBase","abstract":"<p>Abstract syntax tree node. That is, the data-structure used in Z3 to"},"Classes/Z3AstMap.html":{"name":"Z3AstMap","abstract":"<p>Map of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3AstBase.html\">Z3AstBase</a></code> objects.</p>"},"Classes/Z3AstVector.html":{"name":"Z3AstVector","abstract":"<p>Vector of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Z3AstBase.html\">Z3AstBase</a></code> objects.</p>"},"Classes/Z3Config.html":{"name":"Z3Config","abstract":"<p>A configuration object for the Z3 context object.</p>"},"Classes/Z3Constructor.html":{"name":"Z3Constructor","abstract":"<p>Type constructor for a (recursive) datatype.</p>"},"Classes/Z3ConstructorList.html":{"name":"Z3ConstructorList","abstract":"<p>List of constructors for a (recursive) datatype.</p>"},"Classes/Z3Context.html":{"name":"Z3Context","abstract":"<p>Main interaction point to Z3.</p>"},"Classes/Z3Goal.html":{"name":"Z3Goal","abstract":"<p>Set of formulas that can be solved and/or transformed using tactics and"},"Classes/Z3Model.html":{"name":"Z3Model","abstract":"<p>Model for the constraints asserted into the logical context.</p>"},"Classes/Z3Optimize.html":{"name":"Z3Optimize","abstract":"<p>Object for managing optimization context.</p>"},"Classes/Z3ParamDescrs.html":{"name":"Z3ParamDescrs","abstract":"<p>Provides a collection of parameter names, their types, default values and"},"Classes/Z3Params.html":{"name":"Z3Params","abstract":"<p>Parameter set used to configure many components such as: simplifiers,"},"Classes/Z3ParserContext.html":{"name":"Z3ParserContext","abstract":"<p>Context for incrementally parsing strings. Declarations can be added"},"Classes/Z3Probe.html":{"name":"Z3Probe","abstract":"<p>A class describing a probe in Z3."},"Classes.html#/s:7SwiftZ30B16RefCountedObjectC":{"name":"Z3RefCountedObject","abstract":"<p>Base class for Z3 objects that support reference counting.</p>"},"Classes/Z3Solver.html":{"name":"Z3Solver","abstract":"<p>Incremental solver, possibly specialized by a particular tactic or logic.</p>"},"Classes/Z3Stats.html":{"name":"Z3Stats","abstract":"<p>Provides statistical data for a solver.</p>"},"Classes/Z3Symbol.html":{"name":"Z3Symbol","abstract":"<p>Lisp-like symbol used to name types, constants, and functions."},"Classes/Z3Tactic.html":{"name":"Z3Tactic","abstract":"<p>Basic building block for creating custom solvers for specific problem domains.</p>"},"license.html":{"name":"LICENSE"},"readme.html":{"name":"README"},"licensez3.html":{"name":"LICENSE.z3"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}